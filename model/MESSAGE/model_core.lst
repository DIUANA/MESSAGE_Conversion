GAMS 24.7.4  r58773 Released Sep 19, 2016 WEX-WEI x86 64bit/MS Windows 09/12/21 11:54:43 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  ***
   2  * MESSAGE core formulation
   3  * ========================
   4  *
   5  * The |MESSAGEix| systems-optimization model minimizes total costs
   6  * while satisfying given demand levels for commodities/services
   7  * and considering a broad range of technical/engineering constraints and s
      ocietal restrictions
   8  * (e.g. bounds on greenhouse gas emissions, pollutants, system reliability
      ).
   9  * Demand levels are static (i.e. non-elastic), but the demand response can
       be integrated by linking |MESSAGEix|
  10  * to the single sector general-economy MACRO model included in this framew
      ork.
  11  *
  12  * For the complete list of sets, mappings and parameters,
  13  * refer to the auto-documentation pages :ref:`sets_maps_def` and :ref:`par
      ameter_def`.
  14  * The mathematical notation that is used to represent sets and mappings in
       the equations below
  15  * can also be found in the tables in :ref:`sets_maps_def`.
  16  ***
  17   
  18  *-------------------------------------------------------------------------
      ---------------------------------------------*
  19  * Variable definitions                                                    
                                                   *
  20  *-------------------------------------------------------------------------
      ---------------------------------------------*
  21   
  22  ***
  23  * Variable definitions
  24  * --------------------
  25  *
  26  * Decision variables
  27  * ^^^^^^^^^^^^^^^^^^
  28  * ======================================================== ===============
      =====================================================================
  29  * Variable                                                 Explanatory tex
      t
  30  * ======================================================== ===============
      =====================================================================
  31  * :math:`OBJ \in \mathbb{R}`                               Objective value
       of the optimization program
  32  * :math:`EXT_{n,c,g,y} \in \mathbb{R}_+`                   Extraction of n
      on-renewable/exhaustible resources from reserves
  33  * :math:`STOCK_{n,c,l,y} \in \mathbb{R}_+`                 Quantity in sto
      ck (storage) at start of period :math:`y`
  34  * :math:`STOCK\_CHG_{n,c,l,y,h} \in \mathbb{R}`            Input or output
       quantity into intertemporal commodity stock (storage)
  35  * :math:`COST\_NODAL_{n,y} \in \mathbb{R}`                 System costs at
       the node level over time
  36  * :math:`REN_{n,t,c,g,y,h} \in \mathbb{R}_+`               Activity of ren
      ewable technologies per grade
  37  * :math:`CAP\_NEW_{n,t,y} \in \mathbb{R}_+`                Newly installed
       capacity (yearly average over period duration)
  38  * :math:`CAP_{n,t,y^V,y} \in \mathbb{R}_+`                 Maintained capa
      city in year :math:`y` of vintage :math:`y^V`
  39  * :math:`CAP\_FIRM_{n,t,c,l,y,q} \in \mathbb{R}_+`         Capacity counti
      ng towards firm (dispatchable)
  40  * :math:`ACT_{n,t,y^V,y,m,h} \in \mathbb{R}`               Activity of a t
      echnology (by vintage, mode, subannual time)
  41  * :math:`ACT\_RATING_{n,t,y^V,y,c,l,h,q} \in \mathbb{R}_+` Auxiliary varia
      ble for activity attributed to a particular rating bin [#ACT_RATING]_
  42  * :math:`CAP\_NEW\_UP_{n,t,y} \in \mathbb{R}_+`            Relaxation of u
      pper dynamic constraint on new capacity
  43  * :math:`CAP\_NEW\_LO_{n,t,y} \in \mathbb{R}_+`            Relaxation of l
      ower dynamic constraint on new capacity
  44  * :math:`ACT\_UP_{n,t,y,h} \in \mathbb{R}_+`               Relaxation of u
      pper dynamic constraint on activity [#ACT_BD]_
  45  * :math:`ACT\_LO_{n,t,y,h} \in \mathbb{R}_+`               Relaxation of l
      ower dynamic constraint on activity [#ACT_BD]_
  46  * :math:`LAND_{n,s,y} \in [0,1]`                           Relative share 
      of land-use scenario (for land-use model emulator)
  47  * :math:`EMISS_{n,e,\widehat{t},y} \in \mathbb{R}`         Auxiliary varia
      ble for aggregate emissions by technology type
  48  * :math:`REL_{r,n,y} \in \mathbb{R}`                       Auxiliary varia
      ble for left-hand side of relations (linear constraints)
  49  * :math:`COMMODITY\_USE_{n,c,l,y} \in \mathbb{R}`          Auxiliary varia
      ble for amount of commodity used at specific level
  50  * :math:`COMMODITY\_BALANCE_{n,c,l,y,h} \in \mathbb{R}`    Auxiliary varia
      ble for right-hand side of :ref:`commodity_balance`
  51  * :math:`STORAGE_{n,t,l,c,y,h} \in \mathbb{R}`             State of charge
       or content of storage at each sub-annual timestep
  52  * :math:`STORAGE\_CHARGE_{n,t,l,c,y,h} \in \mathbb{R}`     Charging of sto
      rage in each sub-annual timestep (negative for discharging)
  53  * ======================================================== ===============
      =====================================================================
  54  *
  55  * The index :math:`y^V` is the year of construction (vintage) wherever it 
      is necessary to
  56  * clearly distinguish between year of construction and the year of operati
      on.
  57  *
  58  * All decision variables are by year, not by (multi-year) period, except :
      math:`STOCK_{n,c,l,y}`.
  59  * In particular, the new capacity variable :math:`CAP\_NEW_{n,t,y}` has to
       be multiplied by the number of years
  60  * in a period :math:`|y| = duration\_period_{y}` to determine the availabl
      e capacity in subsequent periods.
  61  * This formulation gives more flexibility when it comes to using periods o
      f different duration
  62  * (more intuitive comparison across different periods).
  63  *
  64  * The current model framework allows both input or output normalized formu
      lation.
  65  * This will affect the parametrization, see Section :ref:`efficiency_outpu
      t` for more details.
  66  *
  67  * .. [#ACT_RATING] The auxiliary variable :math:`ACT\_RATING_{n,t,y^V,y,c,
      l,h,q}` is defined in terms of input or
  68  *    output of the technology.
  69  *
  70  * .. [#ACT_BD] The dynamic activity constraints are implemented as summed 
      over all modes;
  71  *    therefore, the variables for the relaxation are not indexed over the 
      set ``mode``.
  72  *
  73  ***
  74   
  75  Variables
  76      OBJ objective value of the optimisation problem
  77  ;
  78   
  79  Positive Variables
  80  * resource production/extraction variable
  81      EXT(node,commodity,grade,year_all)   extraction of fossil resources
****             $120      $120  $120     $120
**** 120  Unknown identifier entered as set
  82  * commodity in inter-temporal stock
  83      STOCK(node,commodity,level,year_all) total quantity in intertemporal s
****                               $120
      tock (storage)
**** 120  Unknown identifier entered as set
  84  * use of renewable resources
  85      REN(node, tec, commodity, grade, year_all, time)     activity of renew
****                  $120                              $120
      ables specified per renewables grade
**** 120  Unknown identifier entered as set
  86  * investment and capacity variables
  87      CAP_NEW(node,tec,year_all)       new capacity by year
  88      CAP(node,tec,vintage,year_all)   total installed capacity by year
****                         $120
**** 120  Unknown identifier entered as set
  89      CAP_FIRM(node,tec,commodity,level,year_all) capacity counting towards 
      system reliability constraints
  90  * auxiliary variable for distributing total activity of a technology to a 
      number of "rating bins"
  91      ACT_RATING(node,tec,vintage,year_all,commodity,level,time,rating)
****                                                                     $120
**** 120  Unknown identifier entered as set
  92  * variables for soft relaxation of dynamic activity constraints
  93      CAP_NEW_UP(node,tec,year_all)    relaxation variable for dynamic const
      raints on new capacity (upwards)
  94      CAP_NEW_LO(node,tec,year_all)    relaxation variable for dynamic const
      raints on new capacity (downwards)
  95      ACT_UP(node,tec,year_all,time)   relaxation variable for dynamic const
      raints on activity (upwards)
  96      ACT_LO(node,tec,year_all,time)   relaxation variable for dynamic const
      raints on activity (downwards)
  97  * land-use model emulator
  98      LAND(node,land_scenario,year_all) relative share of land-use scenario
****                            $120
**** 120  Unknown identifier entered as set
  99  * content of storage
 100      STORAGE(node,tec,level,commodity,year_all,time)       state of charge 
      (SoC) of storage at each sub-annual timestep (positive)
 101  ;
 102   
 103  Variables
 104  * intertemporal stock variables (input or output quantity into the stock)
 105      STOCK_CHG(node,commodity,level,year_all,time) annual input into and ou
      tput from stocks of commodities
 106  * technology activity variables (can be negative for some technologies, up
      per and lower bounds stated explicitly)
 107      ACT(node,tec,vintage,year_all,mode,time)     activity of technology by
****                                       $120
       mode-year-timeperiod
**** 120  Unknown identifier entered as set
 108  * auxiliary variables for finrm-capacity formulation
 109      COMMODITY_USE(node,commodity,level,year_all) total amount of a commodi
      ty & level that was used or consumed
 110  * nodal system costs over time
 111      COST_NODAL(node, year_all)                   system costs at the node 
      level over time
 112  * auxiliary variable for aggregate emissions by technology type and land-u
      se model emulator
 113      EMISS(node,emission,type_tec,year_all)       aggregate emissions by te
****                        $120     $120
      chnology type and land-use model emulator
**** 120  Unknown identifier entered as set
 114  * auxiliary variable for left-hand side of relations (linear constraints)
 115      REL(relation,node,year_all)                  auxiliary variable for le
****                 $120
      ft-hand side of user-defined relations
**** 120  Unknown identifier entered as set
 116      REL2(relation2,node,year_all)                  auxiliary variable for 
****                   $120
      left-hand side of user-defined relations
**** 120  Unknown identifier entered as set
 117  * change in the content of storage device
 118      STORAGE_CHARGE(node,tec,level,commodity,year_all,time)    charging of 
      storage in each timestep (negative for discharge)
 119  ;
 120   
 121  ***
 122  * Auxiliary variables
 123  * ^^^^^^^^^^^^^^^^^^^
 124  * ==================================================================== ===
      ==========================================================================
      =========================
 125  * Variable                                                             Exp
      lanatory text
 126  * ==================================================================== ===
      ==========================================================================
      =========================
 127  * :math:`DEMAND_{n,c,l,y,h} \in \mathbb{R}`                            Dem
      and level (in equilibrium with MACRO integration)
 128  * :math:`PRICE\_COMMODITY_{n,c,l,y,h} \in \mathbb{R}`                  Com
      modity price (undiscounted marginals of :ref:`commodity_balance_gt` and :r
      ef:`commodity_balance_lt`)
 129  * :math:`PRICE\_EMISSION_{n,\widehat{e},\widehat{t},y} \in \mathbb{R}` Emi
      ssion price (undiscounted marginals of :ref:`emission_constraint`)
 130  * :math:`COST\_NODAL\_NET_{n,y} \in \mathbb{R}`                        Sys
      tem costs at the node level net of energy trade revenues/cost
 131  * :math:`GDP_{n,y} \in \mathbb{R}`                                     Gro
      ss domestic product (GDP) in market exchange rates for MACRO reporting
 132  * ==================================================================== ===
      ==========================================================================
      =========================
 133  *
 134  ***
 135   
 136  Variables
 137  * auxiliary variables for demand, prices, costs and GDP (for reporting whe
      n MESSAGE is run with MACRO)
 138      DEMAND(node,commodity,level,year_all,time) demand
 139      PRICE_COMMODITY(node,commodity,level,year_all,time)  commodity price (
      derived from marginals of COMMODITY_BALANCE constraint)
 140      PRICE_EMISSION(node,type_emission,type_tec,year_all) emission price (d
****                                      $120
      erived from marginals of EMISSION_BOUND constraint)
**** 120  Unknown identifier entered as set
 141      COST_NODAL_NET(node,year_all)              system costs at the node le
      vel over time including effects of energy trade
 142      GDP(node,year_all)                         gross domestic product (GDP
      ) in market exchange rates for MACRO reporting
 143  ;
 144   
 145  *-------------------------------------------------------------------------
      ---------------------------------------------*
 146  * auxiliary bounds on activity variables (debugging mode, avoid inter-vint
      age arbitrage, investment technology)                                     
                         *
 147  *-------------------------------------------------------------------------
      ---------------------------------------------*
 148   
 149  * include upper and lower bounds (to avoid unbounded models)
 150  %AUX_BOUNDS% ACT.lo(node,tec,year_all,year_all2,mode,time)$( map_tec_lifet
****  $409
      ime(node,tec,year_all,year_all2)
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 151  %AUX_BOUNDS%    AND map_tec_act(node,tec,year_all2,mode,time) ) = -%AUX_BO
      UND_VALUE% ;
 152  %AUX_BOUNDS% ACT.up(node,tec,year_all,year_all2,mode,time)$( map_tec_lifet
****  $409
      ime(node,tec,year_all,year_all2)
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 153  %AUX_BOUNDS%    AND map_tec_act(node,tec,year_all2,mode,time) ) = %AUX_BOU
      ND_VALUE% ;
 154   
 155  * to avoid "inter-vintage arbitrage" (across different vintages of technol
      ogies), all activities that
 156  * have positive lower bounds are assumed to be non-negative
 157  ACT.lo(node,tec,year_all,year_all2,mode,time)$( map_tec_lifetime(node,tec,
****                                   $120                          $140
      year_all,year_all2)
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
 158      AND map_tec_act(node,tec,year_all2,mode,time) AND bound_activity_lo(no
****                    $140                                                $140
      de,tec,year_all2,mode,time) >= 0 ) = 0 ;
**** 140  Unknown symbol
 159  * previous implementation using upper bounds
 160  * ACT.lo(node,tec,year_all,year_all2,mode,time)$( map_tec_lifetime(node,te
      c,year_all,year_all2)
 161  *    AND map_tec_act(node,tec,year_all2,mode,time)
 162  *    AND ( NOT bound_activity_up(node,tec,year_all2,mode,time)
 163  *        OR bound_activity_up(node,tec,year_all2,mode,time) >= 0 ) ) = 0 ;
 164   
 165  * assume that all "investment" technologies must have non-negative activit
      y levels
 166  ACT.lo(node,inv_tec,year_all,year_all2,mode,time)$( map_tec_lifetime(node,
****                    $120
      inv_tec,year_all,year_all2)
**** 120  Unknown identifier entered as set
 167      AND map_tec_act(node,inv_tec,year_all2,mode,time) ) = 0 ;
 168   
 169  *-------------------------------------------------------------------------
      ---------------------------------------------*
 170  * fixing variables to pre-specified values                                
                                                   *
 171  *-------------------------------------------------------------------------
      ---------------------------------------------*
 172   
 173  EXT.fx(node,commodity,grade,year_all)$( is_fixed_extraction(node,commodity
****                                                            $140
      ,grade,year_all) ) =
**** 140  Unknown symbol
 174      fixed_extraction(node,commodity,grade,year_all);
****                     $140
**** 140  Unknown symbol
 175  STOCK.fx(node,commodity,level,year_all)$( is_fixed_stock(node,commodity,le
****                                                         $140
      vel,year_all) ) =
**** 140  Unknown symbol
 176      fixed_stock(node,commodity,level,year_all) ;
****                $140
**** 140  Unknown symbol
 177  CAP_NEW.fx(node,tec,year_all)$( is_fixed_new_capacity(node,tec,year_all) )
****                                                      $140
       =
**** 140  Unknown symbol
 178      fixed_new_capacity(node,tec,year_all) ;
****                       $140
**** 140  Unknown symbol
 179  CAP.fx(node,tec,vintage,year_all)$( is_fixed_capacity(node,tec,vintage,yea
****                                                      $140
      r_all) ) =
**** 140  Unknown symbol
 180      fixed_capacity(node,tec,vintage,year_all) ;
****                   $140
**** 140  Unknown symbol
 181  ACT.fx(node,tec,vintage,year_all,mode,time)$( is_fixed_activity(node,tec,v
****                                                                $140
      intage,year_all,mode,time) ) =
**** 140  Unknown symbol
 182      fixed_activity(node,tec,vintage,year_all,mode,time) ;
****                   $140
**** 140  Unknown symbol
 183  LAND.fx(node,land_scenario,year_all)$( is_fixed_land(node,land_scenario,ye
****                                                     $140
      ar_all) ) =
**** 140  Unknown symbol
 184      fixed_land(node,land_scenario,year_all) ;
****               $140
**** 140  Unknown symbol
 185   
 186  *-------------------------------------------------------------------------
      ---------------------------------------------*
 187  * auxiliary variables for debugging mode (identifying infeasibilities)    
                                                   *
 188  *-------------------------------------------------------------------------
      ---------------------------------------------*
 189   
 190  * report mapping for debugging
 191  Set
 192      AUX_ACT_BOUND_UP(node,tec,year_all,year_all2,mode,time) indicator whet
      her auxiliary upper bound on activity is binding
 193      AUX_ACT_BOUND_LO(node,tec,year_all,year_all2,mode,time) indicator whet
      her auxiliary upper bound on activity is binding
 194  ;
 195   
 196  * slack variables for debugging
 197  Positive variables
 198      SLACK_COMMODITY_EQUIVALENCE_UP(node,commodity,level,year_all,time) sla
      ck variable for commodity balance (upwards)
 199      SLACK_COMMODITY_EQUIVALENCE_LO(node,commodity,level,year_all,time) sla
      ck variable for commodity balance (downwards)
 200      SLACK_CAP_NEW_BOUND_UP (node,tec,year_all)        slack variable for b
      ound on new capacity (upwards)
 201      SLACK_CAP_NEW_BOUND_LO (node,tec,year_all)        slack variable for b
      ound on new capacity (downwards)
 202      SLACK_CAP_TOTAL_BOUND_UP (node,tec,year_all)      slack variable for u
      pper bound on total installed capacity
 203      SLACK_CAP_TOTAL_BOUND_LO (node,tec,year_all)      slack variable for l
      ower bound on total installed capacity
 204      SLACK_CAP_NEW_DYNAMIC_UP(node,tec,year_all)       slack variable for d
      ynamic new capacity constraint (upwards)
 205      SLACK_CAP_NEW_DYNAMIC_LO(node,tec,year_all)       slack variable for d
      ynamic new capacity constraint (downwards)
 206      SLACK_ACT_BOUND_UP(node,tec,year_all,mode,time)   slack variable for u
      pper bound on activity
 207      SLACK_ACT_BOUND_LO(node,tec,year_all,mode,time)   slack variable for l
      ower bound on activity
 208      SLACK_ACT_DYNAMIC_UP(node,tec,year_all,time)      slack variable for d
      ynamic activity constraint relaxation (upwards)
 209      SLACK_ACT_DYNAMIC_LO(node,tec,year_all,time)      slack variable for d
      ynamic activity constraint relaxation (downwards)
 210      SLACK_LAND_SCEN_UP(node,land_scenario,year_all)   slack variable for d
      ynamic land scenario constraint relaxation (upwards)
 211      SLACK_LAND_SCEN_LO(node,land_scenario,year_all)   slack variable for d
      ynamic land scenario constraint relaxation (downwards)
 212      SLACK_LAND_TYPE_UP(node,year_all,land_type)       slack variable for d
****                                               $120
      ynamic land type constraint relaxation (upwards)
**** 120  Unknown identifier entered as set
 213      SLACK_LAND_TYPE_LO(node,year_all,land_type)       slack variable for d
      ynamic land type constraint relaxation (downwards)
 214      SLACK_RELATION_BOUND_UP(relation,node,year_all)   slack variable for u
      pper bound of generic relation
 215      SLACK_RELATION_BOUND_LO(relation,node,year_all)   slack variable for l
      ower bound of generic relation
 216      SLACK_RELATION_BOUND_UP2(relation2,node,year_all)   slack variable for
       upper bound of generic relation
 217      SLACK_RELATION_BOUND_LO2(relation2,node,year_all)   slack variable for
       lower bound of generic relation
 218      SLACK_CAP_CON(node,tec,vintage,year_all,time)
 219      SLACK_MUF_TIME(node,tec,vintage,year_all,time)
 220      SLACK_MUF(node,tec,vintage,year_all)
 221      SLACK_CAP_LAND(node,tec,year_all,BLUES_type_land_tec)
****                                                         $120
**** 120  Unknown identifier entered as set
 222      SLACK_EMISSION(node,type_emission,type_tec,type_year)
****                                                         $120
**** 120  Unknown identifier entered as set
 223      SLACK_EXT_BOUND_UP(node,commodity,grade,year_all)
 224  ;
 225   
 226  *-------------------------------------------------------------------------
      ---------------------------------------------*
 227  * equation definitions                                                    
                                                   *
 228  *-------------------------------------------------------------------------
      ---------------------------------------------*
 229   
 230  Equations
 231      OBJECTIVE                       objective value of the optimisation pr
      oblem
 232      COST_ACCOUNTING_NODAL           cost accounting at node level over tim
      e
 233      EXTRACTION_EQUIVALENCE          auxiliary equation to simplify the res
      ource extraction formulation
 234      EXTRACTION_BOUND_UP             upper bound on extraction (by grade)
 235      RESOURCE_CONSTRAINT             constraint on resources remaining in e
      ach period (maximum extraction per period)
 236      RESOURCE_HORIZON                constraint on extraction over entire m
      odel horizon (resource volume in place)
 237      COMMODITY_BALANCE_GT            commodity supply greater than or equal
       demand
 238      COMMODITY_BALANCE_LT            commodity supply lower than or equal d
      emand
 239      STOCKS_BALANCE                  commodity inter-temporal balance of st
      ocks
 240      CAPACITY_CONSTRAINT             capacity constraint for technology (by
       sub-annual time slice)
 241      CAPACITY_MAINTENANCE_HIST       constraint for capacity maintenance  h
      istorical installation (built before start of model horizon)
 242      CAPACITY_MAINTENANCE_NEW        constraint for capacity maintenance of
       new capacity built in the current period (vintage == year)
 243      CAPACITY_MAINTENANCE            constraint for capacity maintenance ov
      er the technical lifetime
 244      CAPACITY_MAINTENANCE_NO_ER
 245      OPERATION_CONSTRAINT            constraint on maximum yearly operation
       (scheduled down-time for maintenance)
 246      MIN_UTILIZATION_CONSTRAINT      constraint for minimum yearly operatio
      n (aggregated over the course of a year)
 247      RENEWABLES_POTENTIAL_CONSTRAINT constraint on renewable resource poten
      tial
 248      RENEWABLES_CAPACITY_REQUIREMENT lower bound on required overcapacity w
      hen using lower grade potentials
 249      RENEWABLES_EQUIVALENCE          equation to define the renewables extr
      action
 250      ADDON_ACTIVITY_UP               addon-technology activity upper constr
      aint
 251      ADDON_ACTIVITY_LO               addon technology activity lower constr
      aint
 252      COMMODITY_USE_LEVEL             aggregate use of commodity by level as
       defined by total input into technologies
 253      ACTIVITY_BY_RATING              constraint on auxiliary rating-specifi
      c activity variable by rating bin
 254      ACTIVITY_RATING_TOTAL           equivalence of auxiliary rating-specif
      ic activity variables to actual activity
 255      FIRM_CAPACITY_PROVISION         contribution of dispatchable technolog
      ies to auxiliary firm-capacity variable
 256      SYSTEM_RELIABILITY_CONSTRAINT   constraint on total system reliability
       (firm capacity)
 257      SYSTEM_FLEXIBILITY_CONSTRAINT   constraint on total system flexibility
 258      NEW_CAPACITY_BOUND_UP           upper bound on technology capacity inv
      estment
 259      NEW_CAPACITY_BOUND_LO           lower bound on technology capacity inv
      estment
 260      TOTAL_CAPACITY_BOUND_UP         upper bound on total installed capacit
      y
 261      TOTAL_CAPACITY_BOUND_LO         lower bound on total installed capacit
      y
 262      NEW_CAPACITY_CONSTRAINT_UP      dynamic constraint for capacity invest
      ment (learning and spillovers upper bound)
 263      NEW_CAPACITY_SOFT_CONSTRAINT_UP bound on soft relaxation of dynamic ne
      w capacity constraints (upwards)
 264      NEW_CAPACITY_CONSTRAINT_LO      dynamic constraint on capacity investm
      ent (lower bound)
 265      NEW_CAPACITY_SOFT_CONSTRAINT_LO bound on soft relaxation of dynamic ne
      w capacity constraints (downwards)
 266      ACTIVITY_BOUND_UP               upper bound on activity summed over al
      l vintages
 267      ACTIVITY_BOUND_LO               lower bound on activity summed over al
      l vintages
 268      ACTIVITY_BOUND_ALL_MODES_UP     upper bound on activity summed over al
      l vintages and modes
 269      ACTIVITY_BOUND_ALL_MODES_LO     lower bound on activity summed over al
      l vintages and modes
 270      SHARE_CONSTRAINT_COMMODITY_UP   upper bounds on share constraints for 
      commodities
 271      SHARE_CONSTRAINT_COMMODITY_LO   lower bounds on share constraints for 
      commodities
 272      SHARE_CONSTRAINT_MODE_UP        upper bounds on share constraints for 
      modes of a given technology
 273      SHARE_CONSTRAINT_MODE_LO        lower bounds on share constraints for 
      modes of a given technology
 274      ACTIVITY_CONSTRAINT_UP          dynamic constraint on the market penet
      ration of a tgeneric_share_factor_upechnology activity (upper bound)
 275      ACTIVITY_SOFT_CONSTRAINT_UP     bound on relaxation of the dynamic con
      straint on market penetration (upper bound)
 276      ACTIVITY_CONSTRAINT_LO          dynamic constraint on the market penet
      ration of a technology activity (lower bound)
 277      ACTIVITY_SOFT_CONSTRAINT_LO     bound on relaxation of the dynamic con
      straint on market penetration (lower bound)
 278      EMISSION_EQUIVALENCE            auxiliary equation to simplify the not
      ation of emissions
 279      EMISSION_CONSTRAINT             nodal-regional-global constraints on e
      missions (by category)
 280      LAND_CONSTRAINT                 constraint on total land use (linear c
      ombination of land scenarios adds up to 1)
 281      DYNAMIC_LAND_SCEN_CONSTRAINT_UP dynamic constraint on land scenario ch
      ange (upper bound)
 282      DYNAMIC_LAND_SCEN_CONSTRAINT_LO dynamic constraint on land scenario ch
      ange (lower bound)
 283      DYNAMIC_LAND_TYPE_CONSTRAINT_UP dynamic constraint on land-use change 
      (upper bound)
 284      DYNAMIC_LAND_TYPE_CONSTRAINT_LO dynamic constraint on land-use change 
      (lower bound)
 285      RELATION_EQUIVALENCE            auxiliary equation to simplify the imp
      lementation of relations
 286      RELATION_CONSTRAINT_UP          upper bound of relations (linear const
      raints)
 287      RELATION_CONSTRAINT_LO          lower bound of relations (linear const
      raints)
 288      STORAGE_CHANGE                  change in the state of charge of stora
      ge
 289      STORAGE_BALANCE                 balance of the state of charge of stor
      age
 290      STORAGE_BALANCE_INIT            balance of the state of charge of stor
      age at sub-annual time steps with initial storage content
 291      STORAGE_EQUIVALENCE             mapping state of storage as activity o
      f storage technologies
 292      BLUES_LAND_BALANCE              testing constraint to guarantee the ba
      lance between the land use technologies
 293  ***    LDR_ADJ                         adding sub annual min utilization f
      actor to make LDR works
 294  **    BLUES_LAND_HIST_BAL
 295      RELATION_EQUIVALENCE2
 296      RELATION_CONSTRAINT_UP2
 297      RELATION_CONSTRAINT_LO2
 298      MIN_UTILIZATION_CONSTRAINT_TIME
 299  ;
 300  *-------------------------------------------------------------------------
      ---------------------------------------------*
 301  * equation statements                                                     
                                                   *
 302  *-------------------------------------------------------------------------
      ---------------------------------------------*
 303   
 304  ***
 305  * Objective function
 306  * ------------------
 307  *
 308  * The objective function of the |MESSAGEix| core model
 309  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 310  *
 311  * Equation OBJECTIVE
 312  * """"""""""""""""""
 313  *
 314  * The objective function (of the core model) minimizes total discounted sy
      stems costs including costs for emissions,
 315  * relaxations of dynamic constraints
 316  *
 317  * .. math::
 318  *    OBJ = \sum_{n,y \in Y^{M}} df\_year_{y} \cdot COST\_NODAL_{n,y}
 319  *
 320  ***
 321  OBJECTIVE..
 322      OBJ =E= SUM( (node,year), df_period(year) * COST_NODAL(node,year) ) ;
****                            $120        $140                          $171
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
**** 171  Domain violation for set
 323   
 324  ***
 325  * Regional system cost accounting function
 326  * ----------------------------------------
 327  *
 328  * Accounting of regional system costs over time
 329  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 330  *
 331  * Equation COST_ACCOUNTING_NODAL
 332  * """"""""""""""""""""""""""""""
 333  *
 334  * Accounting of regional systems costs over time as well as costs for emis
      sions (taxes),
 335  * land use (from the model land-use model emulator), relaxations of dynami
      c constraints,
 336  * and linear relations.
 337  *
 338  * .. math::
 339  *    COST\_NODAL_{n,y} & = \sum_{c,g} \ resource\_cost_{n,c,g,y} \cdot EXT
      _{n,c,g,y} \\
 340  *      & + \sum_{t} \
 341  *          \bigg( inv\_cost_{n,t,y} \cdot construction\_time\_factor_{n,t,
      y} \\
 342  *      & \quad \quad \quad \cdot end\_of\_horizon\_factor_{n,t,y} \cdot CA
      P\_NEW_{n,t,y} \\[4 pt]
 343  *      & \quad \quad + \sum_{y^V \leq y} \ fix\_cost_{n,t,y^V,y} \cdot CAP
      _{n,t,y^V,y} \\
 344  *      & \quad \quad + \sum_{\substack{y^V \leq y \\ m,h}} \ var\_cost_{n,
      t,y^V,y,m,h} \cdot ACT_{n,t,y^V,y,m,h} \\
 345  *      & \quad \quad + \Big( abs\_cost\_new\_capacity\_soft\_up_{n,t,y} \\
 346  *      & \quad \quad \quad
 347  *          + level\_cost\_new\_capacity\_soft\_up_{n,t,y} \cdot\ inv\_cost
      _{n,t,y}
 348  *          \Big) \cdot CAP\_NEW\_UP_{n,t,y} \\[4pt]
 349  *      & \quad \quad + \Big( abs\_cost\_new\_capacity\_soft\_lo_{n,t,y} \\
 350  *      & \quad \quad \quad
 351  *          + level\_cost\_new\_capacity\_soft\_lo_{n,t,y} \cdot\ inv\_cost
      _{n,t,y}
 352  *          \Big) \cdot CAP\_NEW\_LO_{n,t,y} \\[4pt]
 353  *      & \quad \quad + \sum_{m,h} \ \Big( abs\_cost\_activity\_soft\_up_{n
      ,t,y,m,h} \\
 354  *      & \quad \quad \quad
 355  *          + level\_cost\_activity\_soft\_up_{n,t,y,m,h} \cdot\ levelized\
      _cost_{n,t,y,m,h}
 356  *          \Big) \cdot ACT\_UP_{n,t,y,h} \\
 357  *      & \quad \quad + \sum_{m,h} \ \Big( abs\_cost\_activity\_soft\_lo_{n
      ,t,y,m,h} \\
 358  *      & \quad \quad \quad
 359  *          + level\_cost\_activity\_soft\_lo_{n,t,y,m,h} \cdot\ levelized\
      _cost_{n,t,y,m,h}
 360  *          \Big) \cdot ACT\_LO_{n,t,y,h} \bigg) \\
 361  *      & + \sum_{\substack{\widehat{e},\widehat{t} \\ e \in E(\widehat{e})
      }}
 362  *            emission\_scaling_{\widehat{e},e} \cdot \ emission\_tax_{n,\w
      idehat{e},\widehat{t},y}
 363  *            \cdot EMISS_{n,e,\widehat{t},y} \\
 364  *      & + \sum_{s} land\_cost_{n,s,y} \cdot LAND_{n,s,y} \\
 365  *      & + \sum_{r} relation\_cost_{r,n,y} \cdot REL_{r,n,y}
 366  ***
 367   
 368  COST_ACCOUNTING_NODAL(node, year)..
 369      COST_NODAL(node, year) =E=
****                           $171
**** 171  Domain violation for set
 370  * resource extraction costs
 371      SUM((commodity,grade)$( map_resource(node,commodity,grade,year) ),
****                                         $140
**** 140  Unknown symbol
 372           resource_cost(node,commodity,grade,year) * EXT(node,commodity,gra
****                       $140
      de,year) )
**** 140  Unknown symbol
 373  * technology capacity investment, maintainance, operational cost
 374      + SUM((tec)$( map_tec(node,tec,year) ),
****                          $140
**** 140  Unknown symbol
 375              (
 376                  round(
 377                      inv_cost(node,tec,year) * construction_time_factor(nod
****                             $140                                      $140
      e,tec,year)
**** 140  Unknown symbol
 378                  * end_of_horizon_factor(node,tec,year)
****                                        $140
**** 140  Unknown symbol
 379                  , 6)
 380                  * CAP_NEW(node,tec,year)
****                                         $171
**** 171  Domain violation for set
 381              + SUM(vintage$( map_tec_lifetime(node,tec,vintage,year) ),
 382                  fix_cost(node,tec,vintage,year) * CAP(node,tec,vintage,yea
****                         $140
      r) ) )$( inv_tec(tec) )
**** 140  Unknown symbol
 383              + SUM((vintage,mode,time)$( map_tec_lifetime(node,tec,vintage,
      year) AND map_tec_act(node,tec,year,mode,time) ),
 384                  ACT(node,tec,vintage,year,mode,time) *
 385                  round(
 386                      var_cost(node,tec,vintage,year,mode,time)
****                             $140
**** 140  Unknown symbol
 387                  *  duration_time(time)
****                                 $140
**** 140  Unknown symbol
 388  *vom no BLUES is the value to produce the main output amount ?????????
 389                  *  main_output_val(node,tec,vintage,year,mode,time)
****                                   $140
**** 140  Unknown symbol
 390                  ,6)
 391  *            + SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year
      ) ),
 392  *                var_cost2(node,tec,vintage,year,mode) *
 393  *                SUM(time$(map_tec_act(node,tec,year,mode,time)),
 394  *                        ACT(node,tec,vintage,year,mode,time)
 395  *                *
 396  *                round(
 397  *                        (main_output_val(node,tec,vintage,year,mode,time)
 398  *                   *  duration_time(time)
 399  *                   ,6)     )
 400                  )
 401              )
 402  * additional cost terms (penalty) for relaxation of 'soft' dynamic new cap
      acity constraints
 403      + SUM((inv_tec)$( map_tec(node,inv_tec,year) ),
 404          SUM((mode,time)$map_tec_act(node,inv_tec,year,mode,time),
 405              ( ( abs_cost_new_capacity_soft_up(node,inv_tec,year)
****                                              $140
**** 140  Unknown symbol
 406                  + level_cost_new_capacity_soft_up(node,inv_tec,year) * inv
****                                                  $140
      _cost(node,inv_tec,year)
**** 140  Unknown symbol
 407                  ) * CAP_NEW_UP(node,inv_tec,year) )$( soft_new_capacity_up
****                                             $171 $171                     $
      (node,inv_tec,year) )
      140
**** 140  Unknown symbol
**** 171  Domain violation for set
 408              + ( ( abs_cost_new_capacity_soft_lo(node,inv_tec,year)
****                                                $140
**** 140  Unknown symbol
 409                  + level_cost_new_capacity_soft_lo(node,inv_tec,year) * inv
****                                                  $140
      _cost(node,inv_tec,year)
**** 140  Unknown symbol
 410                  ) * CAP_NEW_LO(node,inv_tec,year) )$( soft_new_capacity_lo
****                                             $171 $171                     $
      (node,inv_tec,year) )
      140
**** 140  Unknown symbol
**** 171  Domain violation for set
 411              )
 412          )
 413  * additional cost terms (penalty) for relaxation of 'soft' dynamic activit
      y constraints
 414      + SUM((tec)$( map_tec(node,tec,year) ),
 415          SUM(time$( map_tec_time(node,tec,year,time) ),
****                                $140
**** 140  Unknown symbol
 416              ( ( abs_cost_activity_soft_up(node,tec,year,time)
****                                          $140
**** 140  Unknown symbol
 417                  + level_cost_activity_soft_up(node,tec,year,time) * leveli
****                                              $140                          
      zed_cost(node,tec,year,time)
             $140
**** 140  Unknown symbol
 418                  ) * ACT_UP(node,tec,year,time) )$( soft_activity_up(node,t
****                                          $171                      $140
      ec,year,time) )
**** 140  Unknown symbol
**** 171  Domain violation for set
 419              + ( ( abs_cost_activity_soft_lo(node,tec,year,time)
****                                            $140
**** 140  Unknown symbol
 420                  + level_cost_activity_soft_lo(node,tec,year,time)  * level
****                                              $140
      ized_cost(node,tec,year,time)
**** 140  Unknown symbol
 421                  ) * ACT_LO(node,tec,year,time) )$( soft_activity_lo(node,t
****                                          $171                      $140
      ec,year,time) )
**** 140  Unknown symbol
**** 171  Domain violation for set
 422              )
 423          )
 424  * emission taxes (by parent node, type of technology, type of year and typ
      e of emission)
 425      + SUM((type_emission,emission,type_tec,type_year)$( emission_scaling(t
****                                                                         $14
      ype_emission,emission)
      0
**** 140  Unknown symbol
 426              AND cat_year(type_year,year) ),
****                         $140
**** 140  Unknown symbol
 427          emission_scaling(type_emission,emission)
 428          * tax_emission(node,type_emission,type_tec,type_year)
****                       $140
**** 140  Unknown symbol
 429          * EMISS(node,emission,type_tec,year) )
 430  * cost terms from land-use model emulator (only includes valid node-land_s
      cenario-year combinations)
 431      + SUM(land_scenario$( land_cost(node,land_scenario,year) ),
****                                    $140
**** 140  Unknown symbol
 432          land_cost(node,land_scenario,year) * LAND(node,land_scenario,year)
       )
 433  * cost terms associated with linear relations
 434      + SUM(relation$( relation_cost(relation,node,year) ),
****                                   $140
**** 140  Unknown symbol
 435          relation_cost(relation,node,year) * REL(relation,node,year) )
 436  * cost terms associated with linear relations2
 437      + SUM(relation2$( relation_cost2(relation2,node,year) ),
****                                     $140
**** 140  Unknown symbol
 438          relation_cost2(relation2,node,year) * REL2(relation2,node,year) )
 439  * implementation of slack variables for constraints to aid in debugging
 440      + SUM((commodity,level,time)$( map_commodity(node,commodity,level,year
****                                                 $140
      ,time) ), ( 0
**** 140  Unknown symbol
 441  %SLACK_COMMODITY_EQUIVALENCE%   + SLACK_COMMODITY_EQUIVALENCE_UP(node,comm
****  $8,409
      odity,level,year,time)
****   8  ')' expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 442  %SLACK_COMMODITY_EQUIVALENCE%   + SLACK_COMMODITY_EQUIVALENCE_LO(node,comm
      odity,level,year,time)
 443          ) * 1e7 )
 444      + SUM((tec)$( map_tec(node,tec,year) ), ( 0
 445  %SLACK_CAP_NEW_BOUND_UP%    + 10 * SLACK_CAP_NEW_BOUND_UP(node,tec,year)
 446  %SLACK_CAP_NEW_BOUND_LO%    + 10 * SLACK_CAP_NEW_BOUND_LO(node,tec,year)
 447  %SLACK_CAP_NEW_DYNAMIC_UP%  + 10 * SLACK_CAP_NEW_DYNAMIC_UP(node,tec,year)
 448  %SLACK_CAP_NEW_DYNAMIC_LO%  + 10 * SLACK_CAP_NEW_DYNAMIC_LO(node,tec,year)
 449  %SLACK_CAP_TOTAL_BOUND_UP%  + 10 * SLACK_CAP_TOTAL_BOUND_UP(node,tec,year)
 450  %SLACK_CAP_TOTAL_BOUND_LO%  + 10 * SLACK_CAP_TOTAL_BOUND_LO(node,tec,year)
 451          ) * ABS( 1e5 + inv_cost(node,tec,year) ) )
 452      + SUM((tec,time)$( map_tec_time(node,tec,year,time) ), ( 0
 453  %SLACK_ACT_BOUND_UP%   + 10 * SUM(mode$( map_tec_act(node,tec,year,mode,ti
      me) ), SLACK_ACT_BOUND_UP(node,tec,year,mode,time) )
 454  %SLACK_ACT_BOUND_LO%   + 10 * SUM(mode$( map_tec_act(node,tec,year,mode,ti
      me) ), SLACK_ACT_BOUND_LO(node,tec,year,mode,time) )
 455  %SLACK_ACT_DYNAMIC_UP% + 10 * SLACK_ACT_DYNAMIC_UP(node,tec,year,time)
 456  %SLACK_ACT_DYNAMIC_LO% + 10 * SLACK_ACT_DYNAMIC_LO(node,tec,year,time)
 457          ) * ( 1e5
 458              + ABS( SUM(mode$map_tec_act(node,tec,year,mode,time), var_cost
      (node,tec,year,year,mode,time) ) )
 459              + fix_cost(node,tec,year,year) ) )
 460      + SUM(land_scenario, 0
 461  %SLACK_LAND_SCEN_UP% + 1e6 * SLACK_LAND_SCEN_UP(node,land_scenario,year)
 462  %SLACK_LAND_SCEN_LO% + 1e6 * SLACK_LAND_SCEN_LO(node,land_scenario,year)
 463          )
 464      + SUM(land_type, 0
 465  %SLACK_LAND_TYPE_UP% + 1e6 * SLACK_LAND_TYPE_UP(node,year,land_type)
 466  %SLACK_LAND_TYPE_LO% + 1e6 * SLACK_LAND_TYPE_LO(node,year,land_type)
 467          )
 468      + SUM((relation), 0
 469  %SLACK_RELATION_BOUND_UP% + 1e6 * SLACK_RELATION_BOUND_UP(relation,node,ye
      ar)$( is_relation_upper(relation,node,year) )
 470  %SLACK_RELATION_BOUND_LO% + 1e6 * SLACK_RELATION_BOUND_LO(relation,node,ye
      ar)$( is_relation_lower(relation,node,year) )
 471          )
 472      + SUM((relation2), 0
 473  %SLACK_RELATION_BOUND_UP2% + 1e6 * SLACK_RELATION_BOUND_UP2(relation2,node
      ,year)$( is_relation_upper2(relation2,node,year) )
 474  %SLACK_RELATION_BOUND_LO2% + 1e6 * SLACK_RELATION_BOUND_LO2(relation2,node
      ,year)$( is_relation_lower2(relation2,node,year) )
 475          )
 476      + SUM((tec,vintage, mode, time)$( map_tec_time(node,tec,year,time) AND
 477      map_tec_lifetime(node,tec,vintage,year) AND
 478      map_tec_act(node,tec,year,mode,time)), ( 0
 479  %SLACK_CAP_CON% + 1e6 * SLACK_CAP_CON(node,tec,vintage,year,time)
 480  %SLACK_MUF_TIME% + 1e6 * SLACK_MUF_TIME(node,tec,vintage,year,time)
 481                  )
 482              )
 483      + SUM((tec, vintage)$( map_tec(node,tec,year) AND  map_tec_lifetime(no
      de,tec,vintage,year) ), ( 0
 484  %SLACK_MUF% + 1e6 * SLACK_MUF(node,tec,vintage,year)
 485                  )
 486              )
 487      + SUM((tec,BLUES_type_land_tec) $ ( map_BLUES_land_rel(node,tec, BLUES
      _type_land_tec) ) , (0
 488  %SLACK_CAP_LAND% + 1e6 * SLACK_CAP_LAND(node,tec,year,BLUES_type_land_tec)
 489                  )
 490              )
 491      + SUM((type_emission,type_tec,type_year)$is_bound_emission(node,type_e
      mission,type_tec,type_year), (0
 492  %SLACK_EMISSION% + 1e6   * SLACK_EMISSION(node,type_emission,type_tec,type
      _year)
 493                  )
 494              )
 495      + SUM((commodity,grade)$( map_resource(node,commodity,grade,year) ), (
      0
 496  %SLACK_EXT_BOUND_UP% + 1e6   * SLACK_EXT_BOUND_UP(node,commodity,grade,yea
      r)
 497                  )
 498              )
 499  ;
 500   
 501  ***
 502  * Here, :math:`n^L \in N(n)` are all nodes :math:`n^L` that are sub-nodes 
      of node :math:`n`.
 503  * The subset of technologies :math:`t \in T(\widehat{t})` are all tecs tha
      t belong to category :math:`\widehat{t}`,
 504  * and similar notation is used for emissions :math:`e \in E`.
 505  ***
 506   
 507  *-------------------------------------------------------------------------
      ---------------------------------------------*
 508  ***
 509  * Resource and commodity section
 510  * ------------------------------
 511  *
 512  * Constraints on resource extraction
 513  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 514  *
 515  * .. _extraction_equivalence:
 516  *
 517  * Equation EXTRACTION_EQUIVALENCE
 518  * """""""""""""""""""""""""""""""
 519  *
 520  * This constraint translates the quantity of resources extracted (summed o
      ver all grades) to the input used by
 521  * all technologies (drawing from that node). It is introduced to simplify 
      subsequent notation in input/output relations
 522  * and nodal balance constraints.
 523  *
 524  *  .. math::
 525  *     \sum_{g} EXT_{n,c,g,y} =
 526  *     \sum_{\substack{n^L,t,m,h,h^{OD} \\ y^V \leq y  \\ \ l \in L^{RES} \
      subseteq L }}
 527  *         input_{n^L,t,y^V,y,m,n,c,l,h,h^{OD}} \cdot ACT_{n^L,t,m,y,h}
 528  *
 529  * The set :math:`L^{RES} \subseteq L` denotes all levels for which the det
      ailed representation of resources applies.
 530  ***
 531  EXTRACTION_EQUIVALENCE(node,commodity,year)..
 532      SUM(grade$( map_resource(node,commodity,grade,year) ), EXT(node,commod
      ity,grade,year) )
 533      =G= SUM((location,tec,vintage,mode,level_resource,time_act,time_od)$( 
****                      $120                            $120     $120    $120
      map_tec_act(node,tec,year,mode,time_act)
**** 120  Unknown identifier entered as set
 534              AND map_tec_lifetime(node,tec,vintage,year) ),
 535          input(location,tec,vintage,year,mode,node,commodity,level_resource
****              $140
      ,time_act,time_od)
**** 140  Unknown symbol
 536          * ACT(location,tec,vintage,year,mode,time_act)
 537  *        *  duration_time(time_act)
 538          * duration_time_rel(time_od,time_act)
****                            $140
**** 140  Unknown symbol
 539          ) ;
 540   
 541  ***
 542  * Equation EXTRACTION_BOUND_UP
 543  * """"""""""""""""""""""""""""
 544  *
 545  * This constraint specifies an upper bound on resource extraction by grade
      .
 546  *
 547  *  .. math::
 548  *     EXT_{n,c,g,y} \leq bound\_extraction\_up_{n,c,g,y}
 549  *
 550  ***
 551  EXTRACTION_BOUND_UP(node,commodity,grade,year)$( map_resource(node,commodi
      ty,grade,year)
 552          AND is_bound_extraction_up(node,commodity,grade,year) )..
****                                   $140
**** 140  Unknown symbol
 553      EXT(node,commodity,grade,year) =L= bound_extraction_up(node,commodity,
****                                                           $140
      grade,year) ;
**** 140  Unknown symbol
 554   
 555  ***
 556  * Equation RESOURCE_CONSTRAINT
 557  * """"""""""""""""""""""""""""
 558  *
 559  * This constraint restricts that resource extraction in a year guarantees 
      the "remaining resources" constraint,
 560  * i.e., only a given fraction of remaining resources can be extracted per 
      year.
 561  *
 562  *  .. math::
 563  *     EXT_{n,c,g,y} \leq
 564  *     resource\_remaining_{n,c,g,y} \cdot
 565  *         \Big( & resource\_volume_{n,c,g} \\
 566  *               & - \sum_{y' < y} duration\_period_{y'} \cdot EXT_{n,c,g,y
      '} \Big)
 567  *
 568  ***
 569  RESOURCE_CONSTRAINT(node,commodity,grade,year)$( map_resource(node,commodi
      ty,grade,year)
 570          AND resource_remaining(node,commodity,grade,year) )..
****                               $140
**** 140  Unknown symbol
 571  * extraction per year
 572      EXT(node,commodity,grade,year)
 573      =L=
 574  * remaining resources multiplied by remaining-resources-factor
 575      resource_remaining(node,commodity,grade,year)
 576      * ( resource_volume(node,commodity,grade)
****                        $140
**** 140  Unknown symbol
 577          - SUM(year2$( year_order(year2) < year_order(year) ),
****                    $120         $140
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
 578              duration_period(year2) * EXT(node,commodity,grade,year2) ) ) ;
****                            $140
**** 140  Unknown symbol
 579   
 580  ***
 581  * Equation RESOURCE_HORIZON
 582  * """""""""""""""""""""""""
 583  * This constraint ensures that total resource extraction over the model ho
      rizon does not exceed the available resources.
 584  *
 585  *  .. math::
 586  *     \sum_{y} duration\_period_{y} \cdot EXT_{n,c,g,y} \leq  resource\_vo
      lume_{n,c,g}
 587  *
 588  ***
 589  RESOURCE_HORIZON(node,commodity,grade)$( SUM(year$map_resource(node,commod
      ity,grade,year), 1 ) )..
 590      SUM(year, duration_period(year) * EXT(node,commodity,grade,year)
 591  %SLACK_EXT_BOUND_UP% - SLACK_EXT_BOUND_UP(node,commodity,grade,year)
****  $8,37,409
****   8  ')' expected
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 592      )
 593          =L= resource_volume(node,commodity,grade) ;
 594   
 595  *-------------------------------------------------------------------------
      ---------------------------------------------*
 596  ***
 597  * Constraints on commodities and stocks
 598  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 599  *
 600  * .. _commodity_balance:
 601  *
 602  * Auxiliary COMMODITY_BALANCE
 603  * """""""""""""""""""""""""""
 604  * For the commodity balance constraints below, we introduce an auxiliary v
      ariable called :math:`COMMODITY\_BALANCE`. This is implemented
 605  * as a GAMS ``$macro`` function.
 606  *
 607  *  .. math::
 608  *     \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y}} output_{n^L,t,y^V,y,m,n,
      c,l,h^A,h}
 609  *         \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y,m,h^A} 
      & \\
 610  *     - \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y}} input_{n^L,t,y^V,y,m,n
      ,c,l,h^A,h}
 611  *         \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,m,y,h^A} & \\
 612  *     + \ STOCK\_CHG_{n,c,l,y,h} + \ \sum_s \Big( land\_output_{n,s,y,c,l,
      h} - land\_input_{n,s,y,c,l,h} \Big) \cdot & LAND_{n,s,y} \\[4pt]
 613  *     - \ demand\_fixed_{n,c,l,y,h}
 614  *     = COMMODITY\_BALANCE_{n,c,l,y,h} \quad \forall \ l \notin (L^{RES}, 
      & L^{REN}, L^{STOR} \subseteq L)
 615  *
 616  * The commodity balance constraint at the resource level is included in th
      e `Equation RESOURCE_CONSTRAINT`_,
 617  * while at the renewable level, it is included in the `Equation RENEWABLES
      _EQUIVALENCE`_,
 618  * and at the storage level, it is included in the `Equation STORAGE_BALANC
      E`_.
 619  ***
 620  $macro COMMODITY_BALANCE(node,commodity,level,year,time) (                
                                                   \
 621      SUM( (location,tec,vintage,mode,time2)$( map_tec_act(location,tec,year
      ,mode,time2)                                 \
 622              AND map_tec_lifetime(location,tec,vintage,year) ),            
                                                   \
 623  * import into node and output by all technologies located at 'location' se
      nding to 'node' and 'time2' sending to 'time'
 624          output(location,tec,vintage,year,mode,node,commodity,level,time2,t
      ime)                                         \
 625          * duration_time_rel(time,time2) * ACT(location,tec,vintage,year,mo
      de,time2)                                    \
 626  * export from node and input into technologies located at 'location' takin
      g from 'node' and 'time2' taking from 'time'
 627          - input(location,tec,vintage,year,mode,node,commodity,level,time2,
      time)                                        \
 628          * duration_time_rel(time,time2) * ACT(location,tec,vintage,year,mo
      de,time2) )                                  \
 629  * quantity taken out from ( >0 ) or put into ( <0 ) inter-period stock (st
      orage)
 630      + STOCK_CHG(node,commodity,level,year,time)$( map_stocks(node,commodit
      y,level,year) )                              \
 631  * yield from land-use model emulator
 632      + SUM(land_scenario,                                                  
                                                   \
 633          ( land_output(node,land_scenario,year,commodity,level,time)       
                                                   \
 634            - land_input(node,land_scenario,year,commodity,level,time) ) * L
      AND(node,land_scenario,year) )               \
 635  * final demand (exogenous parameter to be satisfied by the commodity syste
      m)
 636      - demand_fixed(node,commodity,level,year,time)                        
                                                   \
 637      )$( map_commodity(node,commodity,level,year,time) AND NOT level_resour
      ce(level) AND NOT level_renewable(level) )
 638   
 639  ***
 640  * .. _commodity_balance_gt:
 641  *
 642  * Equation COMMODITY_BALANCE_GT
 643  * """""""""""""""""""""""""""""
 644  * This constraint ensures that supply is greater or equal than demand for 
      every commodity-level combination.
 645  *
 646  *  .. math::
 647  *     COMMODITY\_BALANCE_{n,c,l,y,h} \geq 0
 648  *
 649  ***
 650  COMMODITY_BALANCE_GT(node,commodity,level,year,time)$( map_commodity(node,
      commodity,level,year,time)
 651          AND NOT level_resource(level) AND NOT level_renewable(level) AND N
****                                                              $140          
      OT level_storage(level) )..
                     $140
**** 140  Unknown symbol
 652      (SUM( (location,tec,vintage,mode,time2)$( map_tec_act(location,tec,yea
****                                           $120                             
      r,mode,time2)AND map_tec_lifetime(location,tec,vintage,year) ),output(loca
                                                                          $140  
      tion,tec,vintage,year,mode,node,commodity,level,time2,time)* duration_time
      _rel(time,time2) * ACT(location,tec,vintage,year,mode,time2)- input(locati
      on,tec,vintage,year,mode,node,commodity,level,time2,time)* duration_time_r
      el(time,time2) * ACT(location,tec,vintage,year,mode,time2) )+ STOCK_CHG(no
      de,commodity,level,year,time)$( map_stocks(node,commodity,level,year) )+ S
                             $171              $140                             
      UM(land_scenario,( land_output(node,land_scenario,year,commodity,level,tim
                                   $140                                         
      e)- land_input(node,land_scenario,year,commodity,level,time) ) * LAND(node
                   $140                                                         
      ,land_scenario,year) )- demand_fixed(node,commodity,level,year,time))$( ma
                                         $140
      p_commodity(node,commodity,level,year,time) AND NOT level_resource(level) 
      AND NOT level_renewable(level) )
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
**** 171  Domain violation for set
 653  * relaxation of constraints for debugging
 654  %SLACK_COMMODITY_EQUIVALENCE% + SLACK_COMMODITY_EQUIVALENCE_UP(node,commod
****  $37,409
      ity,level,year,time)
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 655       =G= 0 ;
 656   
 657  ***
 658  * .. _commodity_balance_lt:
 659  *
 660  * Equation COMMODITY_BALANCE_LT
 661  * """""""""""""""""""""""""""""
 662  * This constraint ensures that the supply is smaller than or equal to the 
      demand for all commodity-level combinations
 663  * given in the :math:`balance\_equality_{c,l}`. In combination with the co
      nstraint above, it ensures that supply
 664  * is (exactly) equal to demand.
 665  *
 666  *  .. math::
 667  *     COMMODITY\_BALANCE_{n,c,l,y,h} \leq 0
 668  *
 669  ***
 670  COMMODITY_BALANCE_LT(node,commodity,level,year,time)$( map_commodity(node,
      commodity,level,year,time)
 671          AND NOT level_resource(level) AND NOT level_renewable(level) AND N
      OT level_storage(level)
 672          AND balance_equality(commodity,level) )..
****                             $140
**** 140  Unknown symbol
 673      (SUM( (location,tec,vintage,mode,time2)$( map_tec_act(location,tec,yea
      r,mode,time2)AND map_tec_lifetime(location,tec,vintage,year) ),output(loca
      tion,tec,vintage,year,mode,node,commodity,level,time2,time)* duration_time
      _rel(time,time2) * ACT(location,tec,vintage,year,mode,time2)- input(locati
      on,tec,vintage,year,mode,node,commodity,level,time2,time)* duration_time_r
      el(time,time2) * ACT(location,tec,vintage,year,mode,time2) )+ STOCK_CHG(no
      de,commodity,level,year,time)$( map_stocks(node,commodity,level,year) )+ S
****                         $171
      UM(land_scenario,( land_output(node,land_scenario,year,commodity,level,tim
      e)- land_input(node,land_scenario,year,commodity,level,time) ) * LAND(node
      ,land_scenario,year) )- demand_fixed(node,commodity,level,year,time))$( ma
      p_commodity(node,commodity,level,year,time) AND NOT level_resource(level) 
      AND NOT level_renewable(level) )
**** 171  Domain violation for set
 674  * relaxation of constraints for debugging
 675  %SLACK_COMMODITY_EQUIVALENCE% - SLACK_COMMODITY_EQUIVALENCE_LO(node,commod
****  $37,409
      ity,level,year,time)
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 676      =L= 0 ;
 677   
 678  ***
 679  * Equation STOCKS_BALANCE
 680  * """""""""""""""""""""""
 681  * This constraint ensures the inter-temporal balance of commodity stocks.
 682  * The parameter :math:`commodity\_stocks_{n,c,l}` can be used to model exo
      genous additions to the stock
 683  *
 684  *  .. math::
 685  *     STOCK_{n,c,l,y} + commodity\_stock_{n,c,l,y} =
 686  *         duration\_period_{y} \cdot & \sum_{h} STOCK\_CHG_{n,c,l,y,h} \\
 687  *                                    & + STOCK_{n,c,l,y+1}
 688  *
 689  ***
 690  STOCKS_BALANCE(node,commodity,level,year)$( map_stocks(node,commodity,leve
      l,year) )..
 691      STOCK(node,commodity,level,year)$( NOT first_period(year) )
****                                                        $140
**** 140  Unknown symbol
 692      + commodity_stock(node,commodity,level,year) =E=
****                      $140
**** 140  Unknown symbol
 693      duration_period(year) * SUM(time$( map_commodity(node,commodity,level,
      year,time) ),
 694           STOCK_CHG(node,commodity,level,year,time) )
****                                              $171
**** 171  Domain violation for set
 695      + SUM(year2$( seq_period(year,year2) ), STOCK(node,commodity,level,yea
****                             $140
      r2) ) ;
**** 140  Unknown symbol
 696   
 697  *-------------------------------------------------------------------------
      ---------------------------------------------*
 698  ***
 699  * Technology section
 700  * ------------------
 701  *
 702  * Technical and engineering constraints
 703  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 704  * The first set of constraints concern technologies that have explicit inv
      estment decisions
 705  * and where installed/maintained capacity is relevant for operational deci
      sions.
 706  * The set where :math:`T^{INV} \subseteq T` is the set of all these techno
      logies.
 707   
 708  *
 709  * Equation CAPACITY_CONSTRAINT
 710  * """"""""""""""""""""""""""""
 711  * This constraint ensures that the actual activity of a technology at a no
      de cannot exceed available (maintained)
 712  * capacity summed over all vintages, including the technology capacity fac
      tor :math:`capacity\_factor_{n,t,y,t}`.
 713  *
 714  *  .. math::
 715  *     \sum_{m} ACT_{n,t,y^V,y,m,h}
 716  *         \leq duration\_time_{h} \cdot capacity\_factor_{n,t,y^V,y,h} \cd
      ot CAP_{n,t,y^V,y}
 717  *         \quad \forall \ t \ \in \ T^{INV}
 718  *
 719  *ORINGAL EQUATION:
 720  *CAPACITY_CONSTRAINT(node,inv_tec,vintage,year,time)$( map_tec_time(node,i
      nv_tec,year,time)
 721  *        AND map_tec_lifetime(node,inv_tec,vintage,year) )..
 722  *    SUM(mode$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(node,inv_t
      ec,vintage,year,mode,time))
 723  *        =L= duration_time(time) * capacity_factor(node,inv_tec,vintage,ye
      ar,time) * CAP(node,inv_tec,vintage,year) ;
 724  *
 725  ***
 726  CAPACITY_CONSTRAINT(node,inv_tec,vintage,year,time)$( map_tec_time(node,in
      v_tec,year,time)
 727          AND map_tec_lifetime(node,inv_tec,vintage,year) )..
 728      SUM(mode$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(node,inv_te
      c,vintage,year,mode,time) *
 729                                                  main_output_val(node,inv_t
      ec,vintage,year,mode,time)
 730                                                  )
 731  %SLACK_CAP_CON% - SLACK_CAP_CON(node,inv_tec,vintage,year,time)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 732          =L=
 733  *        duration_time(time) *
 734          capacity_factor(node,inv_tec,vintage,year,time) * CAP(node,inv_tec
      ,vintage,year) ;
 735  ***
 736  * Equation CAPACITY_MAINTENANCE_HIST
 737  * """"""""""""""""""""""""""""""""""
 738  * The following three constraints implement technology capacity maintenanc
      e over time to allow early retirment.
 739  * The optimization problem determines the optimal timing of retirement, wh
      en fixed operation-and-maintenance costs
 740  * exceed the benefit in the objective function.
 741  *
 742  * The first constraint ensures that historical capacity (built prior to th
      e model horizon) is available
 743  * as installed capacity in the first model period.
 744  *
 745  *   .. math::
 746  *      CAP_{n,t,y^V,'first\_period'} & \leq
 747  *          remaining\_capacity_{n,t,y^V,'first\_period'} \cdot
 748  *          duration\_period_{y^V} \cdot
 749  *          historical\_new\_capacity_{n,t,y^V} \\
 750  *      & \text{if } y^V  < 'first\_period' \text{ and } |y| - |y^V| < tech
      nical\_lifetime_{n,t,y^V}
 751  *      \quad \forall \ t \in T^{INV}
 752  *
 753  ***
 754  CAPACITY_MAINTENANCE_HIST(node,inv_tec,vintage,first_period)$( map_tec_lif
      etime(node,inv_tec,vintage,first_period)
 755          AND historical(vintage))..
****                       $140
**** 140  Unknown symbol
 756      CAP(node,inv_tec,vintage,first_period)
 757      =L= remaining_capacity(node,inv_tec,vintage,first_period) *
****                           $140
**** 140  Unknown symbol
 758          duration_period(vintage) * historical_new_capacity(node,inv_tec,vi
****                                                           $140
      ntage) ;
**** 140  Unknown symbol
 759   
 760  ***
 761  * Equation CAPACITY_MAINTENANCE_NEW
 762  * """""""""""""""""""""""""""""""""
 763  * The second constraint ensures that capacity is fully maintained througho
      ut the model period
 764  * in which it was constructed (no early retirement in the period of constr
      uction).
 765  *
 766  *   .. math::
 767  *      CAP_{n,t,y^V,y^V} =
 768  *          remaining\_capacity_{n,t,y^V,y^V} \cdot
 769  *          duration\_period_{y^V} \cdot
 770  *          CAP\_NEW_{n,t,y^V}
 771  *      \quad \forall \ t \in T^{INV}
 772  *
 773  * The current formulation does not account for construction time in the co
      nstraints, but only adds a mark-up
 774  * to the investment costs in the objective function.
 775  ***
 776  CAPACITY_MAINTENANCE_NEW(node,inv_tec,vintage,vintage)$( map_tec_lifetime(
      node,inv_tec,vintage,vintage) )..
 777      CAP(node,inv_tec,vintage,vintage)
 778      =E= remaining_capacity(node,inv_tec,vintage,vintage)
 779          * duration_period(vintage) * CAP_NEW(node,inv_tec,vintage) ;
****                                                           $171    $171
**** 171  Domain violation for set
 780   
 781  ***
 782  * Equation CAPACITY_MAINTENANCE
 783  * """""""""""""""""""""""""""""
 784  * The third constraint implements the dynamics of capacity maintenance thr
      oughout the model horizon.
 785  * Installed capacity can be maintained over time until decommissioning, wh
      ich is irreversible.
 786  *
 787  *   .. math::
 788  *      CAP_{n,t,y^V,y} & \leq
 789  *          remaining\_capacity_{n,t,y^V,y} \cdot
 790  *          CAP_{n,t,y^V,y-1} \\
 791  *      \quad & \text{if } y > y^V \text{ and } y^V  > 'first\_period' \tex
      t{ and } |y| - |y^V| < technical\_lifetime_{n,t,y^V}
 792  *      \quad \forall \ t \in T^{INV}
 793  *
 794  ***
 795  CAPACITY_MAINTENANCE(node,inv_tec,vintage,year)$( map_tec_lifetime(node,in
      v_tec,vintage,year)
 796          AND NOT first_period(year) AND year_order(vintage) < year_order(ye
      ar))..
 797      CAP(node,inv_tec,vintage,year)
 798      =L= remaining_capacity(node,inv_tec,vintage,year) *
 799          ( SUM(year2$( seq_period(year2,year) ),
 800                CAP(node,inv_tec,vintage,year2) ) ) ;
 801  ***
 802  * Equation CAPACITY_MAINTENANCE NO EARLY RETIREMENT
 803  * """""""""""""""""""""""""""""
 804  * The third constraint implements the dynamics of capacity maintenance thr
      oughout the model horizon.
 805  * Installed capacity must be maintained over time until decommissioning, w
      hich is irreversible.
 806  *
 807  *   .. math::
 808  *      CAP_{n,t,y^V,y} & \leq
 809  *          remaining\_capacity_{n,t,y^V,y} \cdot
 810  *          CAP_{n,t,y^V,y-1} \\
 811  *      \quad & \text{if } y > y^V \text{ and } y^V  > 'first\_period' \tex
      t{ and } |y| - |y^V| < technical\_lifetime_{n,t,y^V}
 812  *      \quad \forall \ t \in T^{INV}
 813  *
 814  ***
 815  CAPACITY_MAINTENANCE_NO_ER(node,no_er_tec,vintage,year)$( map_tec_lifetime
****                                          $120
      (node,no_er_tec,vintage,year)
**** 120  Unknown identifier entered as set
 816          AND NOT first_period(year) AND year_order(vintage) < year_order(ye
      ar))..
 817      CAP(node,no_er_tec,vintage,year)
 818      =G= remaining_capacity(node,no_er_tec,vintage,year) *
 819          ( SUM(year2$( seq_period(year2,year) ),
 820                CAP(node,no_er_tec,vintage,year2) ) ) ;
 821  ***
 822  * Equation OPERATION_CONSTRAINT
 823  * """""""""""""""""""""""""""""
 824  * This constraint provides an upper bound on the total operation of instal
      led capacity over a year.
 825  * It can be used to represent reuqired scheduled unavailability of install
      ed capacity.
 826  *
 827  *   .. math::
 828  *      \sum_{m,h} ACT_{n,t,y^V,y,m,h}
 829  *          \leq operation\_factor_{n,t,y^V,y} \cdot capacity\_factor_{n,t,
      y^V,y,m,\text{'year'}} \cdot CAP_{n,t,y^V,y}
 830  *      \quad \forall \ t \in T^{INV}
 831  *
 832  * This constraint is only active if :math:`operation\_factor_{n,t,y^V,y} <
       1`.
 833  ***
 834  OPERATION_CONSTRAINT(node,inv_tec,vintage,year)$( map_tec_lifetime(node,in
      v_tec,vintage,year)
 835          AND operation_factor(node,inv_tec,vintage,year) < 1 )..
****                             $140
**** 140  Unknown symbol
 836      SUM((mode,time)$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(node
      ,inv_tec,vintage,year,mode,time) ) =L=
 837          operation_factor(node,inv_tec,vintage,year) * capacity_factor(node
****                                                                      $140
      ,inv_tec,vintage,year,'year')
**** 140  Unknown symbol
 838          * CAP(node,inv_tec,vintage,year) ;
 839   
 840  ***
 841  * Equation MIN_UTILIZATION_CONSTRAINT
 842  * """""""""""""""""""""""""""""""""""
 843  * This constraint provides a lower bound on the total utilization of insta
      lled capacity over a year.
 844  *
 845  *   .. math::
 846  *      \sum_{m,h} ACT_{n,t,y^V,y,m,h} \geq min\_utilization\_factor_{n,t,y
      ^V,y} \cdot CAP_{n,t,y^V,y}
 847  *      \quad \forall \ t \in T^{INV}
 848  *
 849  * This constraint is only active if :math:`min\_utilization\_factor_{n,t,y
      ^V,y}` is defined.
 850  *ORIGINAL EQUATION:
 851  *MIN_UTILIZATION_CONSTRAINT(node,inv_tec,vintage,year)$( map_tec_lifetime(
      node,inv_tec,vintage,year)
 852  *        AND min_utilization_factor(node,inv_tec,vintage,year) )..
 853  *    SUM((mode,time)$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(nod
      e,inv_tec,vintage,year,mode,time) ) =G=
 854  *        min_utilization_factor(node,inv_tec,vintage,year) * CAP(node,inv_
      tec,vintage,year) ;
 855  *
 856  ***
 857  MIN_UTILIZATION_CONSTRAINT(node,inv_tec,vintage,year)$( map_tec_lifetime(n
      ode,inv_tec,vintage,year)
 858          AND min_utilization_factor(node,inv_tec,vintage,year) )..
****                                   $140
**** 140  Unknown symbol
 859      SUM((mode,time)$( map_tec_act(node,inv_tec,year,mode,time) ),
 860                                              duration_time(time) *
 861                                              ACT(node,inv_tec,vintage,year,
      mode,time) *
 862                                              main_output_val(node,inv_tec,v
      intage,year,mode,time))
 863  %SLACK_MUF% + SLACK_MUF(node,inv_tec,vintage,year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 864                              =G=
 865          min_utilization_factor(node,inv_tec,vintage,year) * CAP(node,inv_t
      ec,vintage,year) ;
 866   
 867  *-------------------------------------------------------------------------
      ---------------------------------------------*
 868  ***
 869  * Equation MIN_UTILIZATION_CONSTRAINT BY TIME
 870  * """""""""""""""""""""""""""""""""""
 871  * This constraint provides a lower bound on the total utilization of insta
      lled capacity over a year.
 872  *
 873  *   .. math::
 874  *      \sum_{m,h} ACT_{n,t,y^V,y,m,h} \geq min\_utilization\_factor_{n,t,y
      ^V,y} \cdot CAP_{n,t,y^V,y}
 875  *      \quad \forall \ t \in T^{INV}
 876  *
 877  * This constraint is only active if :math:`min\_utilization\_factor_{n,t,y
      ^V,y}` is defined.
 878  *ORIGINAL EQUATION:
 879  *MIN_UTILIZATION_CONSTRAINT(node,inv_tec,vintage,year)$( map_tec_lifetime(
      node,inv_tec,vintage,year)
 880  *        AND min_utilization_factor(node,inv_tec,vintage,year) )..
 881  *    SUM((mode,time)$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(nod
      e,inv_tec,vintage,year,mode,time) ) =G=
 882  *        min_utilization_factor(node,inv_tec,vintage,year) * CAP(node,inv_
      tec,vintage,year) ;
 883  *
 884  ***
 885  MIN_UTILIZATION_CONSTRAINT_TIME(node,inv_tec,vintage,year,time)$( map_tec_
      lifetime(node,inv_tec,vintage,year)
 886          AND min_utilization_time_factor(node,inv_tec,vintage,year,time) ).
****                                        $140
      .
**** 140  Unknown symbol
 887      SUM(mode$( map_tec_act(node,inv_tec,year,mode,time) ), ACT(node,inv_te
      c,vintage,year,mode,time) *
 888                                                  main_output_val(node,inv_t
      ec,vintage,year,mode,time)
 889                                                  )
 890  %SLACK_MUF_TIME% + SLACK_MUF_TIME(node,inv_tec,vintage,year,time)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
 891          =G=
 892  *        duration_time(time) *
 893          min_utilization_time_factor(node,inv_tec,vintage,year,time) * CAP(
      node,inv_tec,vintage,year) ;
 894   
 895  *-------------------------------------------------------------------------
      ---------------------------------------------*
 896   
 897  ***
 898  * Constraints representing renewable integration
 899  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 900  *
 901  * Equation RENEWABLES_EQUIVALENCE
 902  * """""""""""""""""""""""""""""""
 903  * This constraint defines the auxiliary variables :math:`REN`
 904  * to be equal to the output of renewable technologies (summed over grades)
      .
 905  *
 906  *  .. math::
 907  *     \sum_{g} REN_{n,t,c,g,y,h} \leq
 908  *     \sum_{\substack{n,t,m,l,h,h^{OD} \\ y^V \leq y  \\ \ l \in L^{REN} \
      subseteq L }}
 909  *         input_{n^L,t,y^V,y,m,n,c,l,h,h^{OD}} \cdot ACT_{n^L,t,m,y,h}
 910  *
 911  * The set :math:`L^{REN} \subseteq L` denotes all levels for which the det
      ailed representation of renewables applies.
 912  ***
 913  RENEWABLES_EQUIVALENCE(node,renewable_tec,commodity,year,time)$(
****                                          $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
 914          map_tec(node,renewable_tec,year) AND map_ren_com(node,renewable_te
****                                                         $140
      c,commodity,year) )..
**** 140  Unknown symbol
 915      SUM(grade$( map_ren_grade(node,commodity,grade,year) ), REN(node,renew
****                              $140
      able_tec,commodity,grade,year,time) )
**** 140  Unknown symbol
 916      =E= SUM((location,vintage,mode,level_renewable,time_act)$(
 917                   map_tec_act(node,renewable_tec,year,mode,time)
 918                   AND map_tec_lifetime(node,renewable_tec,vintage,year) ),
 919          input(location,renewable_tec,vintage,year,mode,node,commodity,leve
      l_renewable,time_act,time)
 920          * ACT(location,renewable_tec,vintage,year,mode,time) ) ;
 921   
 922  ***
 923  * Equation RENEWABLES_POTENTIAL_CONSTRAINT
 924  * """"""""""""""""""""""""""""""""""""""""
 925  * This constraint sets the potential potential by grade as the upper bound
       for the auxiliary variable :math:`REN`.
 926  *
 927  *  .. math::
 928  *     \sum_{\substack{t,h \\ \ t \in T^{R} \subseteq t }} REN_{n,t,c,g,y,h
      }
 929  *         \leq \sum_{\substack{l \\ l \in L^{R} \subseteq L }} renewable\_
      potential_{n,c,g,l,y}
 930  *
 931  ***
 932  RENEWABLES_POTENTIAL_CONSTRAINT(node,commodity,grade,year)$( map_ren_grade
      (node,commodity,grade,year) )..
 933      SUM((renewable_tec,time)$( map_ren_com(node,renewable_tec,commodity,ye
      ar) ),
 934          REN(node,renewable_tec,commodity,grade,year,time) )
 935      =L= SUM(level_renewable, renewable_potential(node,commodity,grade,leve
****                                                 $140
      l_renewable,year) ) ;
**** 140  Unknown symbol
 936   
 937  ***
 938  * Equation RENEWABLES_CAPACITY_REQUIREMENT
 939  * """"""""""""""""""""""""""""""""""""""""
 940  * This constraint connects the capacity factor of a renewable grade to the
 941  * installed capacity of a technology. It sets the lower limit for the capa
      city
 942  * of a renewable technology to the summed activity over all grades (REN) d
      evided
 943  * by the capactiy factor of this grade.
 944  * It represents the fact that different renewable grades require different
       installed
 945  * capacities to provide their full potential.
 946  *
 947  *  .. math::
 948  *     \sum_{y^V, h} & CAP_{n,t,y^V,y} \cdot operation\_factor_{n,t,y^V,y} 
      \cdot capacity\_factor_{n,t,y^V,y,h} \\
 949  *        & \quad \geq \sum_{g,h,l} \frac{1}{renewable\_capacity\_factor_{n
      ,c,g,l,y}} \cdot REN_{n,t,c,g,y,h}
 950  *
 951  * This constraint is only active if :math:`renewable\_capacity\_factor_{n,
      c,g,l,y}` is defined.
 952  ***
 953  RENEWABLES_CAPACITY_REQUIREMENT(node,inv_tec,commodity,year)$(
 954          SUM( (vintage,mode,time,grade,level_renewable),
 955              map_tec_lifetime(node,inv_tec,vintage,year) AND map_tec_act(no
      de,inv_tec,year,mode,time)
 956              AND map_ren_com(node,inv_tec,commodity,year)
 957              AND renewable_capacity_factor(node,commodity,grade,level_renew
****                                          $140
      able,year) > 0 ) )..
**** 140  Unknown symbol
 958      SUM( (vintage,time)$map_ren_com(node,inv_tec,commodity,year),
 959          CAP(node,inv_tec,vintage,year)
 960          * operation_factor(node,inv_tec,vintage,year)
 961          * capacity_factor(node,inv_tec,vintage,year,time) )
 962      =G= SUM((grade,time,level_renewable)$(renewable_capacity_factor(node,c
      ommodity,grade,level_renewable,year) > 0),
 963              REN(node,inv_tec,commodity,grade,year,time)
 964                   / renewable_capacity_factor(node,commodity,grade,level_re
      newable,year)) ;
 965   
 966  *-------------------------------------------------------------------------
      ---------------------------------------------*
 967  ***
 968  * Constraints for addon technologies
 969  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 970  *
 971  * Equation ADDON_ACTIVITY_UP
 972  * """"""""""""""""""""""""""
 973  * This constraint provides an upper bound on the activity of an addon tech
      nology that can only be operated
 974  * jointly with a parent technology (e.g., abatement option, SO2 scrubber, 
      power plant cooling technology).
 975  *
 976  *   .. math::
 977  *      \sum_{\substack{t^a, y^V \leq y}} ACT_{n,t^a,y^V,y,m,h}
 978  *      \leq
 979  *      \sum_{\substack{t, y^V \leq y}}
 980  *          & addon\_up_{n,t,y,m,h,\widehat{t^a}} \cdot
 981  *          addon\_conversion_{n,t,y^V,y,m,h,\widehat{t^a}} \\
 982  *          & \cdot ACT_{n,t,y^V,y,m,h} \quad \forall \ t^a \in T^{A}
 983  *
 984  ***
 985  ADDON_ACTIVITY_UP(node,type_addon,year,mode,time)..
****                                  $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
 986  * activity of addon technology
 987      sum( (addon,vintage)$(
****                $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
 988              cat_addon(type_addon,addon) AND
****                      $140
**** 140  Unknown symbol
 989              map_tec_act(node,addon,year,mode,time) AND
 990              map_tec_lifetime(node,addon,vintage,year) ),
 991          ACT(node,addon,vintage,year,mode,time) )
 992      =L=
 993  * activity of corresponding parent-technology multiplied by upper bound of
       share
 994        sum((tec,vintage)$(
 995            map_tec_addon(tec,type_addon) AND
****                        $140
**** 140  Unknown symbol
 996            map_tec_act(node,tec,year,mode,time) AND
 997            map_tec_lifetime(node,tec,vintage,year)
 998        ),
 999            addon_up(node,tec,year,mode,time,type_addon)
****                   $140
**** 140  Unknown symbol
1000            * addon_conversion(node,tec,vintage,year,mode,time,type_addon)
****                             $140
**** 140  Unknown symbol
1001            * ACT(node,tec,vintage,year,mode,time) )
1002  ;
1003   
1004  ***
1005  * Equation ADDON_ACTIVITY_LO
1006  * """"""""""""""""""""""""""
1007  * This constraint provides a lower bound on the activity of an addon techn
      ology that has to be operated
1008  * jointly with a parent technology (e.g., power plant cooling technology).
       The parameter `addon_lo` allows to define
1009  * a minimum level of operation of addon technologies relative to the activ
      ity of the parent technology.
1010  * If `addon_lo = 1`, this means that it is mandatory to operate the addon 
      technology at the same level as the
1011  * parent technology (i.e., full mitigation).
1012  *
1013  *   .. math::
1014  *      \sum_{\substack{t^a, y^V \leq y}} ACT_{n,t^a,y^V,y,m,h}
1015  *      \geq
1016  *      \sum_{\substack{t, y^V \leq y}}
1017  *          & addon\_lo_{n,t,y,m,h,\widehat{t^a}} \cdot
1018  *          addon\_conversion_{n,t,y^V,y,m,h,\widehat{t^a}} \\
1019  *          & \cdot ACT_{n,t,y^V,y,m,h} \quad \forall \ t^a \in T^{A}
1020  *
1021  ***
1022  ADDON_ACTIVITY_LO(node,type_addon,year,mode,time)..
1023  * activity of addon technology
1024      sum( (addon,vintage)$(
1025              cat_addon(type_addon,addon) AND
1026              map_tec_act(node,addon,year,mode,time) AND
1027              map_tec_lifetime(node,addon,vintage,year) ),
1028          ACT(node,addon,vintage,year,mode,time) )
1029      =G=
1030  * activity of corresponding parent-technology times lower bound of share
1031        sum((tec,vintage)$(
1032            map_tec_addon(tec,type_addon) AND
1033            map_tec_act(node,tec,year,mode,time) AND
1034            map_tec_lifetime(node,tec,vintage,year)
1035        ),
1036            addon_lo(node,tec,year,mode,time,type_addon)
****                   $140
**** 140  Unknown symbol
1037            * addon_conversion(node,tec,vintage,year,mode,time,type_addon)
1038            * ACT(node,tec,vintage,year,mode,time) ) ;
1039   
1040  *-------------------------------------------------------------------------
      ---------------------------------------------*
1041  ***
1042  * System reliability and flexibility requirements
1043  * -----------------------------------------------
1044  * This section followi allows to include system-wide reliability and flexi
      lity considerations.
1045  * The current formulation is based on Sullivan et al., 2013 :cite:`sulliva
      n_VRE_2013`.
1046  *
1047  * Aggregate use of a commodity
1048  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1049  * The system reliability and flexibility constraints are implemented using
       an auxiliary variable representing
1050  * the total use (i.e., input of each commodity per level).
1051  *
1052  * Equation COMMODITY_USE_LEVEL
1053  * """"""""""""""""""""""""""""
1054  * This constraint defines the auxiliary variable :math:`COMMODITY\_USE_{n,
      c,l,y}`, which is used to define
1055  * the rating bins and the peak-load that needs to be offset with firm (dis
      patchable) capacity.
1056  *
1057  *   .. math::
1058  *      COMMODITY\_USE_{n,c,l,y}
1059  *      = & \sum_{n^L,t,y^V,m,h} input_{n^L,t,y^V,y,m,n,c,l,h,h} \\
1060  *        & \quad    \cdot duration\_time\_rel_{h,h} \cdot ACT_{n^L,t,y^V,y
      ,m,h}
1061  *
1062  * This constraint and the auxiliary variable is only active if :math:`peak
      \_load\_factor_{n,c,l,y,h}` or
1063  * :math:`flexibility\_factor_{n,t,y^V,y,m,c,l,h,r}` is defined.
1064  ***
1065  COMMODITY_USE_LEVEL(node,commodity,level,year,time)$(
1066           peak_load_factor(node,commodity,level,year,time) OR
****                          $140
**** 140  Unknown symbol
1067           SUM( (tec,vintage,mode,rating), flexibility_factor(node,tec,vinta
****                                                            $140
      ge,year,mode,commodity,level,time,rating) ) )..
**** 140  Unknown symbol
1068      COMMODITY_USE(node,commodity,level,year)
****                                             $171
**** 171  Domain violation for set
1069      =E=
1070      SUM( (location,tec,vintage,mode,time2)$( map_tec_act(location,tec,year
      ,mode,time2)
1071                                               AND map_tec_lifetime(location
      ,tec,vintage,year) ),
1072          input(location,tec,vintage,year,mode,node,commodity,level,time2,ti
      me)
1073          * duration_time_rel(time,time2)
1074          * ACT(location,tec,vintage,year,mode,time2) ) ;
1075   
1076  ***
1077  * .. _rating_bin:
1078  *
1079  * Auxilary variables for technology activity by "rating bins"
1080  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1081  * The capacity and activity of certain (usually non-dispatchable) technolo
      gies
1082  * can be assumed to only partially contribute to the system reliability an
      d flexibility requirements.
1083  *
1084  * Equation ACTIVITY_RATING_BIN
1085  * """"""""""""""""""""""""""""
1086  * The auxiliary variable for rating-specific activity of each technology c
      annot exceed
1087  * the share of the rating bin in relation to the total commodity use.
1088  *
1089  * .. math::
1090  *    ACT\_RATING_{n,t,y^V,y,c,l,h,q}
1091  *    \leq rating\_bin_{n,t,y,c,l,h,q} \cdot COMMODITY\_USE_{n,c,l,y}
1092  *
1093  ***
1094  ACTIVITY_BY_RATING(node,tec,year,commodity,level,time,rating)$(
1095           rating_bin(node,tec,year,commodity,level,time,rating) )..
****                    $140
**** 140  Unknown symbol
1096     sum(vintage$( sum(mode,map_tec_act(node,tec,year,mode,time) ) AND map_t
      ec_lifetime(node,tec,vintage,year) ),
1097              ACT_RATING(node,tec,vintage,year,commodity,level,time,rating) 
      )
1098      =L= rating_bin(node,tec,year,commodity,level,time,rating) * COMMODITY_
      USE(node,commodity,level,year)
****                               $171
**** 171  Domain violation for set
1099  ;
1100   
1101  ***
1102  * Equation ACTIVITY_SHARE_TOTAL
1103  * """""""""""""""""""""""""""""
1104  * The sum of the auxiliary rating-specific activity variables need to equa
      l the total input and/or output
1105  * of the technology.
1106  *
1107  * .. math::
1108  *    \sum_q ACT\_RATING_{n,t,y^V,y,c,l,h,q}
1109  *    = \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y}} &
1110  *         ( input_{n^L,t,y^V,y,m,n,c,l,h^A,h} + output_{n^L,t,y^V,y,m,n,c,
      l,h^A,h} ) \\
1111  *      & \quad    \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y
      ,m,h^A} \\
1112  *
1113  ***
1114  ACTIVITY_RATING_TOTAL(node,tec,vintage,year,commodity,level,time)$(
1115          sum(rating$( rating_bin(node,tec,year,commodity,level,time,rating)
       ), 1 )
1116          AND sum(mode, map_tec_act(node,tec,year,mode,time))
1117          AND map_tec_lifetime(node,tec,vintage,year) )..
1118      sum(rating$( rating_bin(node,tec,year,commodity,level,time,rating) ),
1119          ACT_RATING(node,tec,vintage,year,commodity,level,time,rating) )
1120      =E=
1121          SUM((location,mode,time2)$(
1122                map_tec_act(location,tec,year,mode,time2)
1123                AND map_tec_lifetime(location,tec,vintage,year) ),
1124              ( output(location,tec,vintage,year,mode,node,commodity,level,t
      ime2,time)
1125                + input(location,tec,vintage,year,mode,node,commodity,level,
      time2,time) )
1126                  * duration_time_rel(time,time2)
1127                  * ACT(location,tec,vintage,year,mode,time2) ) ;
1128   
1129  ***
1130  * .. _reliability_constraint:
1131  *
1132  * Reliability of installed capacity
1133  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1134  * The "firm capacity" that a technology can contribute to system reliabili
      ty depends on its dispatch characteristics.
1135  * For dispatchable technologies, the total installed capacity counts towar
      d the firm capacity constraint.
1136  * This is active if the parameter is defined over :math:`reliability\_fact
      or_{n,t,y,c,l,h,'firm'}`.
1137  * For non-dispatchable technologies, or those that do not have explicit in
      vestment decisions,
1138  * the contribution to system reliability is calculated
1139  * by using the auxiliary variable :math:`ACT\_RATING_{n,t,y^V,y,c,l,h,q}` 
      as a proxy,
1140  * with the :math:`reliability\_factor_{n,t,y,c,l,h,q}` defined per rating 
      bin :math:`q`.
1141  *
1142  * Equation FIRM_CAPACITY_PROVISION
1143  * """"""""""""""""""""""""""""""""
1144  * Technologies where the reliability factor is defined with the rating `fi
      rm`
1145  * have an auxiliary variable :math:`CAP\_FIRM_{n,t,c,l,y}`, defined in ter
      ms of output.
1146  *
1147  *   .. math::
1148  *      CAP\_FIRM_{n,t,c,l,y}
1149  *      = \sum_{y^V \leq y} & output_{n^L,t,y^V,y,m,n,c,l,h^A,h} \cdot dura
      tion\_time_h \\
1150  *        & \quad    \cdot capacity\_factor_{n,t,y^V,y,h} \cdot CAP_{n,t,y^
      Y,y}
1151  *      \quad \forall \ t \in T^{INV}
1152  *
1153  ***
1154  FIRM_CAPACITY_PROVISION(node,inv_tec,year,commodity,level,time)$(
1155          reliability_factor(node,inv_tec,year,commodity,level,time,'firm') 
****                           $140
      )..
**** 140  Unknown symbol
1156      CAP_FIRM(node,inv_tec,commodity,level,year) =E=
****                           $171                 $171
**** 171  Domain violation for set
1157      SUM( (location,vintage,mode,time2)$(
1158             map_tec_act(location,inv_tec,year,mode,time2)
1159             AND map_tec_lifetime(location,inv_tec,vintage,year) ),
1160          output(location,inv_tec,vintage,year,mode,node,commodity,level,tim
      e2,time)
1161          * duration_time(time)
1162          * capacity_factor(node,inv_tec,vintage,year,time)
1163          * CAP(node,inv_tec,vintage,year) ) ;
1164   
1165  ***
1166  * Equation SYSTEM_RELIABILITY_CONSTRAINT
1167  * """"""""""""""""""""""""""""""""""""""
1168  * This constraint ensures that there is sufficient firm (dispatchable) cap
      acity in each period.
1169  * The formulation is based on Sullivan et al., 2013 :cite:`sullivan_VRE_20
      13`.
1170  *
1171  *   .. math::
1172  *      \sum_{t, q \substack{t \in T^{INV} \\ y^V \leq y} } &
1173  *          reliability\_factor_{n,t,y,c,l,h,'firm'}
1174  *          \cdot CAP\_FIRM_{n,t,c,l,y} \\
1175  *      + \sum_{t,q,y^V \leq y} &
1176  *          reliability\_factor_{n,t,y,c,l,h,q}
1177  *         \cdot ACT\_RATING_{n,t,y^V,y,c,l,h,q} \\
1178  *         & \quad \geq peak\_load\_factor_{n,c,l,y,h} \cdot COMMODITY\_USE
      _{n,c,l,y}
1179  *
1180  * This constraint is only active if :math:`peak\_load\_factor_{n,c,l,y,h}`
       is defined.
1181  ***
1182  SYSTEM_RELIABILITY_CONSTRAINT(node,commodity,level,year,time)$( peak_load_
      factor(node,commodity,level,year,time) )..
1183      SUM(inv_tec$( reliability_factor(node,inv_tec,year,commodity,level,tim
      e,'firm') ),
1184          reliability_factor(node,inv_tec,year,commodity,level,time,'firm')
1185          * CAP_FIRM(node,inv_tec,commodity,level,year) )
****                                 $171                 $171
**** 171  Domain violation for set
1186      + SUM((tec, mode, vintage, rating_unfirm)$(
****                                             $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1187          reliability_factor(node,tec,year,commodity,level,time,rating_unfir
      m)
1188              AND map_tec_act(node,tec,year,mode,time)
1189              AND map_tec_lifetime(node,tec,vintage,year) ),
1190          reliability_factor(node,tec,year,commodity,level,time,rating_unfir
      m)
1191          * ACT_RATING(node,tec,vintage,year,commodity,level,time,rating_unf
      irm) )
1192      =G= peak_load_factor(node,commodity,level,year,time) * COMMODITY_USE(n
      ode,commodity,level,year) ;
****                          $171
**** 171  Domain violation for set
1193   
1194  ***
1195  * .. _flexibility_constraint:
1196  *
1197  * Equation SYSTEM_FLEXIBILITY_CONSTRAINT
1198  * """"""""""""""""""""""""""""""""""""""
1199  * This constraint ensures that, in each sub-annual time slice, there is a 
      sufficient
1200  * contribution from flexible technologies to ensure smooth system operatio
      n.
1201  *
1202  *   .. math::
1203  *      \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y}} &
1204  *          flexibility\_factor_{n^L,t,y^V,y,m,c,l,h,'unrated'} \\
1205  *      & \quad   \cdot ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t
      ,y^V,y,m,n,c,l,h^A,h} ) \\
1206  *      & \quad   \cdot duration\_time\_rel_{h,h^A}
1207  *                \cdot ACT_{n,t,y^V,y,m,h} \\
1208  *      + \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y}} &
1209  *         flexibility\_factor_{n^L,t,y^V,y,m,c,l,h,1} \\
1210  *      & \quad   \cdot ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t
      ,y^V,y,m,n,c,l,h^A,h} ) \\
1211  *      & \quad   \cdot duration\_time\_rel_{h,h^A}
1212  *                \cdot ACT\_RATING_{n,t,y^V,y,c,l,h,q}
1213  *      \geq 0
1214  *
1215  ***
1216  SYSTEM_FLEXIBILITY_CONSTRAINT(node,commodity,level,year,time)$(
1217          SUM( (tec, vintage, mode, rating),
1218                  flexibility_factor(node,tec,vintage,year,mode,commodity,le
      vel,time,rating) ) )..
1219      SUM( (tec, vintage, mode)$( flexibility_factor(node,tec,vintage,year,m
      ode,commodity,level,time,'unrated') ),
1220          flexibility_factor(node,tec,vintage,year,mode,commodity,level,time
      ,'unrated')
1221          * SUM((location,time2)$(
1222                map_tec_act(location,tec,year,mode,time2)
1223                AND map_tec_lifetime(location,tec,vintage,year) ),
1224              ( output(location,tec,vintage,year,mode,node,commodity,level,t
      ime2,time)
1225                + input(location,tec,vintage,year,mode,node,commodity,level,
      time2,time) )
1226                  * duration_time_rel(time,time2)
1227                  * ACT(location,tec,vintage,year,mode,time2) ) )
1228      + SUM((tec, vintage, mode, rating_unrated)$(
****                                              $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1229              flexibility_factor(node,tec,vintage,year,mode,commodity,level,
      time,rating_unrated)
1230              AND map_tec_act(node,tec,year,mode,time)
1231              AND map_tec_lifetime(node,tec,vintage,year)),
1232          flexibility_factor(node,tec,vintage,year,mode,commodity,level,time
      ,rating_unrated)
1233          * ACT_RATING(node,tec,vintage,year,commodity,level,time,rating_unr
      ated) )
1234      =G= 0 ;
1235   
1236  ACT.LO(node,tec,vintage,year,mode,time)$sum(
1237      (commodity,level,rating), flexibility_factor(node,tec,vintage,year,mod
      e,commodity,level,time,rating) ) = 0 ;
1238   
1239  ***
1240  * Bounds on capacity and activity
1241  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1242  *
1243  * Equation NEW_CAPACITY_BOUND_UP
1244  * """"""""""""""""""""""""""""""
1245  * This constraint provides upper bounds on new capacity installation.
1246  *
1247  *   .. math::
1248  *      CAP\_NEW_{n,t,y} \leq bound\_new\_capacity\_up_{n,t,y} \quad \foral
      l \ t \ \in \ T^{INV}
1249  *
1250  ***
1251  NEW_CAPACITY_BOUND_UP(node,inv_tec,year)$( is_bound_new_capacity_up(node,i
****                                                                    $140
      nv_tec,year) )..
**** 140  Unknown symbol
1252      CAP_NEW(node,inv_tec,year) =L= bound_new_capacity_up(node,inv_tec,year
****                          $171 $171                      $140
      )
**** 140  Unknown symbol
**** 171  Domain violation for set
1253  %SLACK_CAP_NEW_BOUND_UP% + SLACK_CAP_NEW_BOUND_UP(node,inv_tec,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1254  ;
1255   
1256  ***
1257  * Equation NEW_CAPACITY_BOUND_LO
1258  * """"""""""""""""""""""""""""""
1259  * This constraint provides lower bounds on new capacity installation.
1260  *
1261  *   .. math::
1262  *      CAP\_NEW_{n,t,y} \geq bound\_new\_capacity\_lo_{n,t,y} \quad \foral
      l \ t \ \in \ T^{INV}
1263  *
1264  ***
1265  NEW_CAPACITY_BOUND_LO(node,inv_tec,year)$( is_bound_new_capacity_lo(node,i
****                                                                    $140
      nv_tec,year) )..
**** 140  Unknown symbol
1266      CAP_NEW(node,inv_tec,year) =G= bound_new_capacity_lo(node,inv_tec,year
****                          $171 $171                      $140
      )
**** 140  Unknown symbol
**** 171  Domain violation for set
1267  %SLACK_CAP_NEW_BOUND_LO% - SLACK_CAP_NEW_BOUND_LO(node,inv_tec,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1268  ;
1269   
1270  ***
1271  * Equation TOTAL_CAPACITY_BOUND_UP
1272  * """"""""""""""""""""""""""""""""
1273  * This constraint gives upper bounds on the total installed capacity of a 
      technology in a specific year of operation
1274  * summed over all vintages.
1275  *
1276  *   .. math::
1277  *      \sum_{y^V \leq y} CAP_{n,t,y,y^V} \leq bound\_total\_capacity\_up_{
      n,t,y} \quad \forall \ t \ \in \ T^{INV}
1278  *
1279  ***
1280  TOTAL_CAPACITY_BOUND_UP(node,inv_tec,year)$( is_bound_total_capacity_up(no
****                                                                        $140
      de,inv_tec,year) )..
**** 140  Unknown symbol
1281      SUM(vintage$( map_period(vintage,year) AND map_tec_lifetime(node,inv_t
****                             $140
      ec,vintage,year) ),
**** 140  Unknown symbol
1282          CAP(node,inv_tec,vintage,year) )
1283      =L= bound_total_capacity_up(node,inv_tec,year)
****                                $140
**** 140  Unknown symbol
1284  %SLACK_CAP_TOTAL_BOUND_UP% + SLACK_CAP_TOTAL_BOUND_UP(node,inv_tec,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1285  ;
1286   
1287  ***
1288  * Equation TOTAL_CAPACITY_BOUND_LO
1289  * """"""""""""""""""""""""""""""""
1290  * This constraint gives lower bounds on the total installed capacity of a 
      technology.
1291  *
1292  *   .. math::
1293  *      \sum_{y^V \leq y} CAP_{n,t,y,y^V} \geq bound\_total\_capacity\_lo_{
      n,t,y} \quad \forall \ t \ \in \ T^{INV}
1294  *
1295  ***
1296  TOTAL_CAPACITY_BOUND_LO(node,inv_tec,year)$( is_bound_total_capacity_lo(no
****                                                                        $140
      de,inv_tec,year) )..
**** 140  Unknown symbol
1297      SUM(vintage$( map_period(vintage,year) AND map_tec_lifetime(node,inv_t
      ec,vintage,year) ),
1298          CAP(node,inv_tec,vintage,year) )
1299       =G= bound_total_capacity_lo(node,inv_tec,year)
****                                 $140
**** 140  Unknown symbol
1300  %SLACK_CAP_TOTAL_BOUND_LO% - SLACK_CAP_TOTAL_BOUND_LO(node,inv_tec,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1301  ;
1302   
1303  ***
1304  * .. _activity_bound_up:
1305  *
1306  * Equation ACTIVITY_BOUND_UP
1307  * """"""""""""""""""""""""""
1308  * This constraint provides upper bounds by mode of a technology activity, 
      summed over all vintages.
1309  *
1310  *   .. math::
1311  *      \sum_{y^V \leq y} ACT_{n,t,y^V,y,m,h} \leq bound\_activity\_up_{n,t
      ,m,y,h}
1312  *
1313  *ORIGINAL EQUATION DOES NOT INCLUDE: "* main_output_val(node,tec,vintage,y
      ear,mode,time)"
1314  *
1315  ***
1316  ACTIVITY_BOUND_UP(node,tec,year,mode,time)$(
1317      is_bound_activity_up(node,tec,year,mode,time) AND map_tec_act(node,tec
****                         $140
      ,year,mode,time)
**** 140  Unknown symbol
1318  )..
1319      SUM(
1320          vintage$( map_tec_lifetime(node,tec,vintage,year) ),
1321          ACT(node,tec,vintage,year,mode,time)
1322             * main_output_val(node,tec,vintage,year,mode,time)
1323                  )
1324      =L=
1325      bound_activity_up(node,tec,year,mode,time)
****                      $140
**** 140  Unknown symbol
1326  %SLACK_ACT_BOUND_UP% + SLACK_ACT_BOUND_UP(node,tec,year,mode,time)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1327  ;
1328   
1329  ***
1330  * Equation ACTIVITY_BOUND_ALL_MODES_UP
1331  * """"""""""""""""""""""""""""""""""""
1332  * This constraint provides upper bounds of a technology activity across al
      l modes and vintages.
1333  *
1334  *   .. math::
1335  *      \sum_{y^V \leq y, m} ACT_{n,t,y^V,y,m,h} \leq bound\_activity\_up_{
      n,t,y,'all',h}
1336  *
1337  ***
1338  ACTIVITY_BOUND_ALL_MODES_UP(node,tec,year,time)$( is_bound_activity_up(nod
      e,tec,year,'all',time) )..
1339      SUM(
1340          (vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND map_t
      ec_mode(node,tec,year,mode) ),
****        $140
**** 140  Unknown symbol
1341          ACT(node,tec,vintage,year,mode,time)
1342      )
1343      =L=
1344      bound_activity_up(node,tec,year,'all',time)
1345  %SLACK_ACT_BOUND_UP% + SLACK_ACT_BOUND_UP(node,tec,year,'all',time)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1346  ;
1347   
1348  ***
1349  * .. _activity_bound_lo:
1350  *
1351  * Equation ACTIVITY_BOUND_LO
1352  * """"""""""""""""""""""""""
1353  * This constraint provides lower bounds by mode of a technology activity, 
      summed over
1354  * all vintages.
1355  *
1356  *   .. math::
1357  *      \sum_{y^V \leq y} ACT_{n,t,y^V,y,m,h} \geq bound\_activity\_lo_{n,t
      ,y,m,h}
1358  *
1359  * We assume that :math:`bound\_activity\_lo_{n,t,y,m,h} = 0`
1360  * unless explicitly stated otherwise.
1361  *ORIGINAL EQUATION DOES NOT INCLUDE: "* main_output_val(node,tec,vintage,y
      ear,mode,time)"
1362  *
1363  ***
1364  ACTIVITY_BOUND_LO(node,tec,year,mode,time)$( map_tec_act(node,tec,year,mod
      e,time) )..
1365      SUM(
1366          vintage$( map_tec_lifetime(node,tec,vintage,year) ),
1367          ACT(node,tec,vintage,year,mode,time)
1368             * main_output_val(node,tec,vintage,year,mode,time)
1369               )
1370      =G=
1371      bound_activity_lo(node,tec,year,mode,time)
1372  %SLACK_ACT_BOUND_LO% - SLACK_ACT_BOUND_LO(node,tec,year,mode,time)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1373  ;
1374   
1375  ***
1376  * Equation ACTIVITY_BOUND_ALL_MODES_LO
1377  * """"""""""""""""""""""""""""""""""""
1378  * This constraint provides lower bounds of a technology activity across al
      l modes and vintages.
1379  *
1380  *   .. math::
1381  *      \sum_{y^V \leq y, m} ACT_{n,t,y^V,y,m,h} \geq bound\_activity\_lo_{
      n,t,y,'all',h}
1382  *
1383  * We assume that :math:`bound\_activity\_lo_{n,t,y,'all',h} = 0`
1384  * unless explicitly stated otherwise.
1385  ***
1386  ACTIVITY_BOUND_ALL_MODES_LO(node,tec,year,time)$( bound_activity_lo(node,t
      ec,year,'all',time) )..
1387      SUM(
1388          (vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND map_t
      ec_mode(node,tec,year,mode) ),
1389          ACT(node,tec,vintage,year,mode,time)
1390      )
1391      =G=
1392      bound_activity_lo(node,tec,year,'all',time)
1393  %SLACK_ACT_BOUND_LO% - SLACK_ACT_BOUND_LO(node,tec,year,'all',time)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1394  ;
1395   
1396  *-------------------------------------------------------------------------
      ---------------------------------------------*
1397  ***
1398  * .. _share_constraints:
1399  *
1400  * Constraints on shares of technologies and commodities
1401  * -----------------------------------------------------
1402  * This section allows to include upper and lower bounds on the shares of m
      odes used by a technology
1403  * or the shares of commodities produced or consumed by groups of technolog
      ies.
1404  *
1405  * Share constraints on activity by mode
1406  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1407  * Equation SHARES_MODE_UP
1408  * """""""""""""""""""""""
1409  * This constraint provides upper bounds of the share of the activity of on
      e mode
1410  * of a technology. For example, it could limit the share of heat that can 
      be produced
1411  * in a combined heat and electricity power plant.
1412  *
1413  *   .. math::
1414  *     ACT_{n^L,t,y^V,y,m,h^A}
1415  *     \leq share\_mode\_up_{p,n,t,y,m,h} \cdot
1416  *     \sum_{m'} ACT_{n^L,t,y^V,y,m',h^A}
1417  *
1418  ***
1419  SHARE_CONSTRAINT_MODE_UP(shares,node,tec,mode,year,time)$(
****                                $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1420      map_tec_act(node,tec,year,mode,time) AND
1421      share_mode_up(shares,node,tec,mode,year,time)
****                  $140
**** 140  Unknown symbol
1422  )..
1423  * activity of mode to be constrained
1424      SUM(
1425          vintage$( map_tec_lifetime(node,tec,vintage,year) ),
1426          ACT(node,tec,vintage,year,mode,time)
1427      )
1428      =L=
1429      share_mode_up(shares,node,tec,mode,year,time) *
1430  * activity aggregated over all modes
1431      SUM(
1432          (vintage,mode2)$( map_tec_lifetime(node,tec,vintage,year) AND map_
****                       $120,340
      tec_mode(node,tec,year,mode2) ),
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1433          ACT(node,tec,vintage,year,mode2,time)
1434      ) ;
1435   
1436  ***
1437  * Equation SHARES_MODE_LO
1438  * """""""""""""""""""""""
1439  * This constraint provides lower bounds of the share of the activity of on
      e mode of a technology.
1440  *
1441  *   .. math::
1442  *     ACT_{n^L,t,y^V,y,m,h^A}
1443  *     \geq share\_mode\_lo_{p,n,t,y,m,h} \cdot
1444  *     \sum_{m'} ACT_{n^L,t,y^V,y,m',h^A}
1445  *
1446  ***
1447  SHARE_CONSTRAINT_MODE_LO(shares,node,tec,mode,year,time)$(
1448      map_tec_act(node,tec,year,mode,time) AND
1449      share_mode_lo(shares,node,tec,mode,year,time)
****                  $140
**** 140  Unknown symbol
1450  )..
1451  * activity of mode to be constrained
1452      SUM(
1453          vintage$( map_tec_lifetime(node,tec,vintage,year) ),
1454          ACT(node,tec,vintage,year,mode,time)
1455      )
1456      =G=
1457      share_mode_lo(shares,node,tec,mode,year,time) *
1458  * activity aggregated over all modes
1459      SUM(
1460          (vintage,mode2)$( map_tec_lifetime(node,tec,vintage,year) AND map_
      tec_mode(node,tec,year,mode2) ),
1461          ACT(node,tec,vintage,year,mode2,time)
1462      ) ;
1463   
1464  ***
1465  * Share constraints on commodities
1466  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1467  * These constraints allow to set upper and lower bound on the quantity of 
      commodities produced or consumed by a group
1468  * of technologies relative to the commodities produced or consumed by anot
      her group.
1469  *
1470  * The implementation is generic and flexible, so that any combination of c
      ommodities, levels, technologies and nodes
1471  * can be put in relation to any other combination.
1472  *
1473  * The notation :math:`P^{share}` represents the mapping set `map_shares_co
      mmodity_share` denoting all technology types,
1474  * nodes, commodities and levels to be included in the numerator, and :math
      :`P^{total}` is
1475  * the equivalent mapping set `map_shares_commodity_total` for the denomina
      tor.
1476  *
1477  * Equation SHARE_CONSTRAINT_COMMODITY_UP
1478  * """"""""""""""""""""""""""""""""""""""
1479  *   .. math::
1480  *      & \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y, (n,\widehat{t},m,c,l) 
      \sim P^{share}}}
1481  *         ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t,y^V,y,m,n,c,
      l,h^A,h} ) \\
1482  *      & \quad \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y,m,
      h^A} \\
1483  *      & \geq
1484  *        share\_commodity\_up_{p,n,y,h} \cdot
1485  *        \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y, (n,\widehat{t},m,c,l) 
      \sim P^{total}}}
1486  *            ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t,y^V,y,m,n
      ,c,l,h^A,h} ) \\
1487  *      & \quad \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y,m,
      h^A}
1488  *
1489  * This constraint is only active if :math:`share\_commodity\_up_{p,n,y,h}`
       is defined.
1490  ***
1491  SHARE_CONSTRAINT_COMMODITY_UP(shares,node_share,year,time)$( share_commodi
****                                                $120,340                    
      ty_up(shares,node_share,year,time) )..
          $140
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1492  * activity by type_tec_share technologies with map_shares_generic_share en
      tries and a specific mode
1493      SUM( (node,location,type_tec_share,tec,vintage,mode,commodity,level,ti
****                                       $120,340
      me2)$(
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1494          ( map_shares_commodity_share(shares,node_share,node,type_tec_share
****                                     $140
      ,mode,commodity,level) OR
**** 140  Unknown symbol
1495            map_shares_commodity_share(shares,node_share,node,type_tec_share
      ,'all',commodity,level) ) AND
1496          cat_tec(type_tec_share,tec) AND
****                $140
**** 140  Unknown symbol
1497          map_tec_act(location,tec,year,mode,time2) AND
1498          map_tec_lifetime(location,tec,vintage,year)
1499      ),
1500          (
1501              output(location,tec,vintage,year,mode,node,commodity,level,tim
      e2,time) +
1502              input(location,tec,vintage,year,mode,node,commodity,level,time
      2,time)
1503          ) *
1504          duration_time_rel(time,time2) *
1505          ACT(location,tec,vintage,year,mode,time2)
1506      )
1507      =L=
1508      share_commodity_up(shares,node_share,year,time) * (
1509  * total input and output by `type_tec_total` technologies mapped to respec
      tive commodity, level and node
1510      SUM( (node,location,type_tec_total,tec,vintage,mode,commodity,level,ti
****                                       $120,340
      me2)$(
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
1511          ( map_shares_commodity_total(shares,node_share,node,type_tec_total
****                                     $140
      ,mode,commodity,level) OR
**** 140  Unknown symbol
1512             map_shares_commodity_total(shares,node_share,node,type_tec_tota
      l,'all',commodity,level) ) AND
1513          cat_tec(type_tec_total,tec) AND
1514          map_tec_act(location,tec,year,mode,time2) AND
1515          map_tec_lifetime(location,tec,vintage,year)
1516      ),
1517          (
1518              output(location,tec,vintage,year,mode,node,commodity,level,tim
      e2,time) +
1519              input(location,tec,vintage,year,mode,node,commodity,level,time
      2,time)
1520          ) *
1521          duration_time_rel(time,time2) *
1522          ACT(location,tec,vintage,year,mode,time2)
1523      ) ) ;
1524   
1525  ***
1526  * Equation SHARE_CONSTRAINT_COMMODITY_LO
1527  * """"""""""""""""""""""""""""""""""""""
1528  *   .. math::
1529  *      & \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y, (n,\widehat{t},m,c,l) 
      \sim P^{share}}}
1530  *         ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t,y^V,y,m,n,c,
      l,h^A,h} ) \\
1531  *      & \quad \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y,m,
      h^A} \\
1532  *      & \leq
1533  *        share\_commodity\_lo_{p,n,y,h} \cdot
1534  *        \sum_{\substack{n^L,t,m,h^A \\ y^V \leq y, (n,\widehat{t},m,c,l) 
      \sim P^{total}}}
1535  *            ( output_{n^L,t,y^V,y,m,n,c,l,h^A,h} + input_{n^L,t,y^V,y,m,n
      ,c,l,h^A,h} ) \\
1536  *      & \quad \cdot duration\_time\_rel_{h,h^A} \cdot ACT_{n^L,t,y^V,y,m,
      h^A}
1537  *
1538  * This constraint is only active if :math:`share\_commodity\_lo_{p,n,y,h}`
       is defined.
1539  ***
1540  SHARE_CONSTRAINT_COMMODITY_LO(shares,node_share,year,time)$( share_commodi
      ty_lo(shares,node_share,year,time) )..
****      $140
**** 140  Unknown symbol
1541  * total input and output by `type_tec_share` technologies mapped to respec
      tive commodity, level and node
1542      SUM( (node,location,type_tec_share,tec,vintage,mode,commodity,level,ti
      me2)$(
1543          ( map_shares_commodity_share(shares,node_share,node,type_tec_share
      ,mode,commodity,level) OR
1544             map_shares_commodity_share(shares,node_share,node,type_tec_shar
      e,'all',commodity,level) ) AND
1545          cat_tec(type_tec_share,tec) AND
1546          map_tec_act(location,tec,year,mode,time2) AND
1547          map_tec_lifetime(location,tec,vintage,year)
1548      ),
1549          (
1550              output(location,tec,vintage,year,mode,node,commodity,level,tim
      e2,time) +
1551              input(location,tec,vintage,year,mode,node,commodity,level,time
      2,time)
1552          ) *
1553          duration_time_rel(time,time2) *
1554          ACT(location,tec,vintage,year,mode,time2)
1555      )
1556      =G=
1557      share_commodity_lo(shares,node_share,year,time) * (
1558  * total input and output by `type_tec_total` technologies mapped to respec
      tive commodity, level and node
1559      SUM( (node,location,type_tec_total,tec,vintage,mode,commodity,level,ti
      me2)$(
1560          ( map_shares_commodity_total(shares,node_share,node,type_tec_total
      ,mode,commodity,level) OR
1561             map_shares_commodity_total(shares,node_share,node,type_tec_tota
      l,'all',commodity,level) ) AND
1562          cat_tec(type_tec_total,tec) AND
1563          map_tec_act(location,tec,year,mode,time2) AND
1564          map_tec_lifetime(location,tec,vintage,year)
1565      ),
1566          (
1567              output(location,tec,vintage,year,mode,node,commodity,level,tim
      e2,time) +
1568              input(location,tec,vintage,year,mode,node,commodity,level,time
      2,time)
1569          ) *
1570          duration_time_rel(time,time2) *
1571          ACT(location,tec,vintage,year,mode,time2)
1572      ) ) ;
1573   
1574  ***
1575  * .. _dynamic_constraints:
1576  *
1577  * Dynamic constraints on market penetration
1578  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1579  * The constraints in this section specify dynamic upper and lower bounds o
      n new capacity and activity,
1580  * i.e., constraints on market penetration and rate of expansion or phase-o
      ut of a technology.
1581  *
1582  * The formulation directly includes the option for 'soft' relaxations of d
      ynamic constraints
1583  * (cf. Keppo and Strubegger, 2010 :cite:`keppo_short_2010`).
1584  *
1585  * Equation NEW_CAPACITY_CONSTRAINT_UP
1586  * """""""""""""""""""""""""""""""""""
1587  * The level of new capacity additions cannot be greater than an initial va
      lue (compounded over the period duration),
1588  * annual growth of the existing 'capital stock', and a "soft" relaxation o
      f the upper bound.
1589  *
1590  *  .. math::
1591  *     CAP\_NEW_{n,t,y}
1592  *         \leq & ~ initial\_new\_capacity\_up_{n,t,y}
1593  *             \cdot \frac{ \Big( 1 + growth\_new\_capacity\_up_{n,t,y} \Bi
      g)^{|y|} - 1 }
1594  *                        { growth\_new\_capacity\_up_{n,t,y} } \\
1595  *              & + \Big( CAP\_NEW_{n,t,y-1} + historical\_new\_capacity_{n
      ,t,y-1} \Big) \\
1596  *              & \hspace{2 cm} \cdot \Big( 1 + growth\_new\_capacity\_up_{
      n,t,y} \Big)^{|y|} \\
1597  *              & + CAP\_NEW\_UP_{n,t,y} \cdot \Bigg( \Big( 1 + soft\_new\_
      capacity\_up_{n,t,y}\Big)^{|y|} - 1 \Bigg) \\
1598  *         & \quad \forall \ t \ \in \ T^{INV}
1599  *
1600  * Here, :math:`|y|` is the number of years in period :math:`y`, i.e., :mat
      h:`duration\_period_{y}`.
1601  ***
1602  NEW_CAPACITY_CONSTRAINT_UP(node,inv_tec,year)$( map_tec(node,inv_tec,year)
1603          AND is_dynamic_new_capacity_up(node,inv_tec,year) )..
****                                       $140
**** 140  Unknown symbol
1604  * actual new capacity
1605      CAP_NEW(node,inv_tec,year) =L=
****                          $171 $171
**** 171  Domain violation for set
1606  * initial new capacity (compounded over the duration of the period)
1607          initial_new_capacity_up(node,inv_tec,year) * (
****                                $140
**** 140  Unknown symbol
1608              ( ( POWER( 1 + growth_new_capacity_up(node,inv_tec,year) , dur
****                                                  $140
      ation_period(year) ) - 1 )
**** 140  Unknown symbol
1609                  / growth_new_capacity_up(node,inv_tec,year) )$( growth_new
      _capacity_up(node,inv_tec,year) )
1610                + ( duration_period(year) )$( NOT growth_new_capacity_up(nod
      e,inv_tec,year) )
1611              )
1612  * growth of 'capital stock' from previous period
1613          + SUM(year_all2$( seq_period(year_all2,year) ),
1614              CAP_NEW(node,inv_tec,year_all2)$( map_tec(node,inv_tec,year_al
****                                  $171      $171                            
      l2) AND model_horizon(year_all2) )
                          $140
**** 140  Unknown symbol
**** 171  Domain violation for set
1615                + historical_new_capacity(node,inv_tec,year_all2) )
1616                # placeholder for spillover across nodes, technologies, peri
****                $409                      $7,140 $36
      ods (other than immediate predecessor)
****   7  '(' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 140  Unknown symbol
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1617              * POWER( 1 + growth_new_capacity_up(node,inv_tec,year) , durat
      ion_period(year) )
1618  * 'soft' relaxation of dynamic constraints
1619          + ( CAP_NEW_UP(node,inv_tec,year)
1620              * ( POWER( 1 + soft_new_capacity_up(node,inv_tec,year) , durat
      ion_period(year) ) - 1 )
1621             )$( soft_new_capacity_up(node,inv_tec,year) )
1622  * optional relaxation for calibration and debugging
1623  %SLACK_CAP_NEW_DYNAMIC_UP% + SLACK_CAP_NEW_DYNAMIC_UP(node,inv_tec,year)
1624  ;
****  $36,119,2,441,2,119,442,10,8
****   2  Identifier expected
****   8  ')' expected
****  10  ',' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 119  Number (primary) expected
**** 441  Expected TO or DOWNTO. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
**** 442  Expected a ',' or BY. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
1625   
1626  * GAMS implementation comment:
1627  * The sums in the constraint have to be over `year_all2` (not `year2`) to 
      also get the dynamic effect from historical
1628  * new capacity. If one would sum over `year2`, periods prior to the first 
      model year would be ignored.
1629   
1630  ***
1631  * Equation NEW_CAPACITY_SOFT_CONSTRAINT_UP
1632  * """"""""""""""""""""""""""""""""""""""""
1633  * This constraint ensures that the relaxation of the dynamic constraint on
       new capacity (investment) does not exceed
1634  * the level of the investment in the same period (cf. Keppo and Strubegger
      , 2010 :cite:`keppo_short_2010`).
1635  *
1636  *  .. math::
1637  *     CAP\_NEW\_UP_{n,t,y} \leq CAP\_NEW_{n,t,y} \quad \forall \ t \ \in \
       T^{INV}
1638  *
1639  ***
1640  NEW_CAPACITY_SOFT_CONSTRAINT_UP(node,inv_tec,year)$( soft_new_capacity_up(
      node,inv_tec,year) )..
1641      CAP_NEW_UP(node,inv_tec,year) =L= CAP_NEW(node,inv_tec,year) ;
****                             $171 $171                      $171 $171
**** 171  Domain violation for set
1642   
1643  ***
1644  * Equation NEW_CAPACITY_CONSTRAINT_LO
1645  * """""""""""""""""""""""""""""""""""
1646  * This constraint gives dynamic lower bounds on new capacity.
1647  *
1648  *  .. math::
1649  *     CAP\_NEW_{n,t,y}
1650  *         \geq & - initial\_new\_capacity\_lo_{n,t,y}
1651  *             \cdot \frac{ \Big( 1 + growth\_new\_capacity\_lo_{n,t,y} \Bi
      g)^{|y|} }
1652  *                        { growth\_new\_capacity\_lo_{n,t,y} } \\
1653  *              & + \Big( CAP\_NEW_{n,t,y-1} + historical\_new\_capacity_{n
      ,t,y-1} \Big) \\
1654  *              & \hspace{2 cm} \cdot \Big( 1 + growth\_new\_capacity\_lo_{
      n,t,y} \Big)^{|y|} \\
1655  *              & - CAP\_NEW\_LO_{n,t,y} \cdot \Bigg( \Big( 1 + soft\_new\_
      capacity\_lo_{n,t,y}\Big)^{|y|} - 1 \Bigg) \\
1656  *         & \quad \forall \ t \ \in \ T^{INV}
1657  *
1658  ***
1659  NEW_CAPACITY_CONSTRAINT_LO(node,inv_tec,year)$( map_tec(node,inv_tec,year)
1660          AND is_dynamic_new_capacity_lo(node,inv_tec,year) )..
****                                       $140
**** 140  Unknown symbol
1661  * actual new capacity
1662      CAP_NEW(node,inv_tec,year) =G=
****                          $171 $171
**** 171  Domain violation for set
1663  * initial new capacity (compounded over the duration of the period)
1664          - initial_new_capacity_lo(node,inv_tec,year) * (
****                                  $140
**** 140  Unknown symbol
1665              ( ( POWER( 1 + growth_new_capacity_lo(node,inv_tec,year) , dur
****                                                  $140
      ation_period(year) ) - 1 )
**** 140  Unknown symbol
1666                  / growth_new_capacity_lo(node,inv_tec,year) )$( growth_new
      _capacity_lo(node,inv_tec,year) )
1667                + ( duration_period(year) )$( NOT growth_new_capacity_lo(nod
      e,inv_tec,year) )
1668              )
1669  * growth of 'capital stock' from previous period
1670          + SUM(year_all2$( seq_period(year_all2,year) ),
1671                  CAP_NEW(node,inv_tec,year_all2)$( map_tec(node,inv_tec,yea
****                                      $171      $171
      r_all2) AND model_horizon(year_all2) )
**** 171  Domain violation for set
1672                  + historical_new_capacity(node,inv_tec,year_all2)
1673                  # placeholder for spillover across nodes, technologies, pe
****                  $8,409                    $7     $36
      riods (other than immediate predecessor)
****   7  '(' expected
****   8  ')' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1674              ) * POWER( 1 + growth_new_capacity_lo(node,inv_tec,year) , dur
      ation_period(year) )
1675  * 'soft' relaxation of dynamic constraints
1676          - ( CAP_NEW_LO(node,inv_tec,year)
1677              * ( POWER( 1 + soft_new_capacity_lo(node,inv_tec,year) , durat
      ion_period(year) ) - 1 )
1678             )$( soft_new_capacity_lo(node,inv_tec,year) )
1679  * optional relaxation for calibration and debugging
1680  %SLACK_CAP_NEW_DYNAMIC_LO% - SLACK_CAP_NEW_DYNAMIC_LO(node,inv_tec,year)
1681  ;
****  $36,119,2,441,2,119,442,10,8
****   2  Identifier expected
****   8  ')' expected
****  10  ',' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 119  Number (primary) expected
**** 441  Expected TO or DOWNTO. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
**** 442  Expected a ',' or BY. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
1682   
1683  ***
1684  * Equation NEW_CAPACITY_SOFT_CONSTRAINT_LO
1685  * """"""""""""""""""""""""""""""""""""""""
1686  * This constraint ensures that the relaxation of the dynamic constraint on
       new capacity does not exceed
1687  * level of the investment in the same year.
1688  *
1689  *   .. math::
1690  *      CAP\_NEW\_LO_{n,t,y} \leq CAP\_NEW_{n,t,y} \quad \forall \ t \ \in 
      \ T^{INV}
1691  *
1692  ***
1693  NEW_CAPACITY_SOFT_CONSTRAINT_LO(node,inv_tec,year)$( soft_new_capacity_lo(
      node,inv_tec,year) )..
1694      CAP_NEW_LO(node,inv_tec,year) =L= CAP_NEW(node,inv_tec,year) ;
****                             $171 $171                      $171 $171
**** 171  Domain violation for set
1695   
1696  ***
1697  * Equation ACTIVITY_CONSTRAINT_UP
1698  * """""""""""""""""""""""""""""""
1699  * This constraint gives dynamic upper bounds on the market penetration of 
      a technology activity.
1700  *
1701  *  .. math::
1702  *     \sum_{y^V \leq y,m} ACT_{n,t,y^V,y,m,h}
1703  *         \leq & ~ initial\_activity\_up_{n,t,y,h}
1704  *             \cdot \frac{ \Big( 1 + growth\_activity\_up_{n,t,y,h} \Big)^
      {|y|} - 1 }
1705  *                        { growth\_activity\_up_{n,t,y,h} } \\
1706  *             & + \bigg( \sum_{y^V \leq y-1,m} ACT_{n,t,y^V,y-1,m,h}
1707  *                         + \sum_{m} historical\_activity_{n,t,y-1,m,h} \b
      igg) \\
1708  *             & \hspace{2 cm} \cdot \Big( 1 + growth\_activity\_up_{n,t,y,
      h} \Big)^{|y|} \\
1709  *             & + ACT\_UP_{n,t,y,h} \cdot \Bigg( \Big( 1 + soft\_activity\
      _up_{n,t,y,h} \Big)^{|y|} - 1 \Bigg)
1710  *
1711  ***
1712  ACTIVITY_CONSTRAINT_UP(node,tec,year,time)$( map_tec_time(node,tec,year,ti
      me)
1713          AND is_dynamic_activity_up(node,tec,year,time) )..
****                                   $140
**** 140  Unknown symbol
1714  * actual activity (summed over modes)
1715      SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND map_t
      ec_mode(node,tec,year,mode) ),
1716              ACT(node,tec,vintage,year,mode,time) ) =L=
1717  * initial activity (compounded over the duration of the period)
1718          initial_activity_up(node,tec,year,time) * (
****                            $140
**** 140  Unknown symbol
1719              ( ( POWER( 1 + growth_activity_up(node,tec,year,time) , durati
****                                              $140
      on_period(year) ) - 1 )
**** 140  Unknown symbol
1720                  / growth_activity_up(node,tec,year,time) )$( growth_activi
      ty_up(node,tec,year,time) )
1721                + ( duration_period(year) )$( NOT growth_activity_up(node,te
      c,year,time) )
1722              )
1723  * growth of 'capital stock' from previous period
1724          + SUM((year_all2)$( seq_period(year_all2,year) ),
1725              SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year_al
      l2) AND map_tec_mode(node,tec,year_all2,mode)
1726                                   AND model_horizon(year_all2) ),
1727                          ACT(node,tec,vintage,year_all2,mode,time) )
1728                  + SUM(mode, historical_activity(node,tec,year_all2,mode,ti
****                                                $140
      me) )
**** 140  Unknown symbol
1729                  # placeholder for spillover across nodes, technologies, pe
****                  $8,409                    $7     $36
      riods (other than immediate predecessor)
****   7  '(' expected
****   8  ')' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1730                  )
1731              * POWER( 1 + growth_activity_up(node,tec,year,time) , duration
      _period(year) )
1732  * 'soft' relaxation of dynamic constraints
1733          + ( ACT_UP(node,tec,year,time)
1734                  * ( POWER( 1 + soft_activity_up(node,tec,year,time) , dura
      tion_period(year) ) - 1 )
1735              )$( soft_activity_up(node,tec,year,time) )
1736  * optional relaxation for calibration and debugging
1737  %SLACK_ACT_DYNAMIC_UP% + SLACK_ACT_DYNAMIC_UP(node,tec,year,time)
1738  ;
****  $36,119,2,441,2,119,442,10,8
****   2  Identifier expected
****   8  ')' expected
****  10  ',' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 119  Number (primary) expected
**** 441  Expected TO or DOWNTO. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
**** 442  Expected a ',' or BY. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
1739   
1740  ***
1741  * Equation ACTIVITY_SOFT_CONSTRAINT_UP
1742  * """"""""""""""""""""""""""""""""""""
1743  * This constraint ensures that the relaxation of the dynamic activity cons
      traint does not exceed the
1744  * level of the activity.
1745  *
1746  *   .. math::
1747  *      ACT\_UP_{n,t,y,h} \leq \sum_{y^V \leq y,m} ACT_{n^L,t,y^V,y,m,h}
1748  *
1749  ***
1750  ACTIVITY_SOFT_CONSTRAINT_UP(node,tec,year,time)$( soft_activity_up(node,te
      c,year,time) )..
1751      ACT_UP(node,tec,year,time) =L=
****                          $171
**** 171  Domain violation for set
1752          SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND m
      ap_tec_act(node,tec,year,mode,time) ),
1753              ACT(node,tec,vintage,year,mode,time) ) ;
1754   
1755  ***
1756  * Equation ACTIVITY_CONSTRAINT_LO
1757  * """""""""""""""""""""""""""""""
1758  * This constraint gives dynamic lower bounds on the market penetration of 
      a technology activity.
1759  *
1760  *  .. math::
1761  *     \sum_{y^V \leq y,m} ACT_{n,t,y^V,y,m,h}
1762  *         \geq & - initial\_activity\_lo_{n,t,y,h}
1763  *             \cdot \frac{ \Big( 1 + growth\_activity\_lo_{n,t,y,h} \Big)^
      {|y|} - 1 }
1764  *                        { growth\_activity\_lo_{n,t,y,h} } \\
1765  *             & + \bigg( \sum_{y^V \leq y-1,m} ACT_{n,t,y^V,y-1,m,h}
1766  *                         + \sum_{m} historical\_activity_{n,t,y-1,m,h} \b
      igg) \\
1767  *             & \hspace{2 cm} \cdot \Big( 1 + growth\_activity\_lo_{n,t,y,
      h} \Big)^{|y|} \\
1768  *             & - ACT\_LO_{n,t,y,h} \cdot \Bigg( \Big( 1 + soft\_activity\
      _lo_{n,t,y,h} \Big)^{|y|} - 1 \Bigg)
1769  *
1770  ***
1771  ACTIVITY_CONSTRAINT_LO(node,tec,year,time)$( map_tec_time(node,tec,year,ti
      me)
1772          AND is_dynamic_activity_lo(node,tec,year,time) )..
****                                   $140
**** 140  Unknown symbol
1773  * actual activity (summed over modes)
1774      SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND map_t
      ec_mode(node,tec,year,mode) ),
1775              ACT(node,tec,vintage,year,mode,time) ) =G=
1776  * initial activity (compounded over the duration of the period)
1777          - initial_activity_lo(node,tec,year,time) * (
****                              $140
**** 140  Unknown symbol
1778              ( ( POWER( 1 + growth_activity_lo(node,tec,year,time) , durati
****                                              $140
      on_period(year) ) - 1 )
**** 140  Unknown symbol
1779                  / growth_activity_lo(node,tec,year,time) )$( growth_activi
      ty_lo(node,tec,year,time) )
1780                + ( duration_period(year) )$( NOT growth_activity_lo(node,te
      c,year,time) )
1781              )
1782  * growth of 'capital stock' from previous period
1783          + SUM((year_all2)$( seq_period(year_all2,year) ),
1784              SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year_al
      l2) AND map_tec_mode(node,tec,year_all2,mode)
1785                                   AND model_horizon(year_all2)),
1786                          ACT(node,tec,vintage,year_all2,mode,time) )
1787                  + SUM(mode, historical_activity(node,tec,year_all2,mode,ti
      me) )
1788                  # placeholder for spillover across nodes, technologies, pe
****                  $8,409                    $7     $36
      riods (other than immediate predecessor)
****   7  '(' expected
****   8  ')' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1789                  )
1790              * POWER( 1 + growth_activity_lo(node,tec,year,time) , duration
      _period(year) )
1791  * 'soft' relaxation of dynamic constraints
1792          - ( ACT_LO(node,tec,year,time)
1793              * ( POWER( 1 + soft_activity_lo(node,tec,year,time) , duration
      _period(year) ) - 1 )
1794              )$( soft_activity_lo(node,tec,year,time) )
1795  * optional relaxation for calibration and debugging
1796  %SLACK_ACT_DYNAMIC_LO% - SLACK_ACT_DYNAMIC_LO(node,tec,year,time)
1797  ;
****  $36,119,2,441,2,119,442,10,8
****   2  Identifier expected
****   8  ')' expected
****  10  ',' expected
****  36  '=' or '..' or ':=' or '$=' operator expected
****      rest of statement ignored
**** 119  Number (primary) expected
**** 441  Expected TO or DOWNTO. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
**** 442  Expected a ',' or BY. The general syntax of a FOR statement is
****        FOR ( i = start TO/DOWNTO end [BY increment] , statements )
1798   
1799  ***
1800  * Equation ACTIVITY_SOFT_CONSTRAINT_LO
1801  * """"""""""""""""""""""""""""""""""""
1802  * This constraint ensures that the relaxation of the dynamic activity cons
      traint does not exceed the
1803  * level of the activity.
1804  *
1805  *   .. math::
1806  *      ACT\_LO_{n,t,y,h} \leq \sum_{y^V \leq y,m} ACT_{n,t,y^V,y,m,h}
1807  *
1808  ***
1809  ACTIVITY_SOFT_CONSTRAINT_LO(node,tec,year,time)$( soft_activity_lo(node,te
      c,year,time) )..
1810      ACT_LO(node,tec,year,time) =L=
****                          $171
**** 171  Domain violation for set
1811          SUM((vintage,mode)$( map_tec_lifetime(node,tec,vintage,year) AND m
      ap_tec_act(node,tec,year,mode,time) ),
1812              ACT(node,tec,vintage,year,mode,time) ) ;
1813   
1814  *-------------------------------------------------------------------------
      ---------------------------------------------*
1815  ***
1816  * Emission section
1817  * ----------------
1818  *
1819  * Auxiliary variable for aggregate emissions
1820  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1821  *
1822  * Equation EMISSION_EQUIVALENCE
1823  * """""""""""""""""""""""""""""
1824  * This constraint simplifies the notation of emissions aggregated over dif
      ferent technology types
1825  * and the land-use model emulator. The formulation includes emissions from
       all sub-nodes :math:`n^L` of :math:`n`.
1826  *
1827  *   .. math::
1828  *      EMISS_{n,e,\widehat{t},y} =
1829  *          \sum_{n^L \in N(n)} \Bigg(
1830  *              \sum_{t \in T(\widehat{t}),y^V \leq y,m,h }
1831  *                  emission\_factor_{n^L,t,y^V,y,m,e} \cdot ACT_{n^L,t,y^V
      ,y,m,h} \\
1832  *              + \sum_{s} \ land\_emission_{n^L,s,y,e} \cdot LAND_{n^L,s,y
      }
1833  *                   \text{ if } \widehat{t} \in \widehat{T}^{LAND} \Bigg)
1834  *
1835  ***
1836  EMISSION_EQUIVALENCE(node,emission,type_tec,year)..
1837      EMISS(node,emission,type_tec,year)
1838      =E=
1839      SUM(location$( map_node(node,location) ),
****                            $140
**** 140  Unknown symbol
1840  * emissions from technology activity
1841          SUM((tec,vintage,mode,time)$( cat_tec(type_tec,tec)
1842              AND map_tec_act(location,tec,year,mode,time) AND map_tec_lifet
      ime(location,tec,vintage,year) ),
1843          emission_factor(location,tec,vintage,year,mode,emission) * ACT(loc
****                        $140
      ation,tec,vintage,year,mode,time)
**** 140  Unknown symbol
1844                    *  main_output_val(node,tec,vintage,year,mode,time)
1845          * duration_time(time)
1846          )
1847  * emissions from land use if 'type_tec' is included in the dynamic set 'ty
      pe_tec_land'
1848          + SUM(land_scenario$( type_tec_land(type_tec) ),
****                                            $140
**** 140  Unknown symbol
1849              land_emission(location,land_scenario,year,emission) * LAND(loc
****                          $140
      ation,land_scenario,year) )
**** 140  Unknown symbol
1850        ) ;
1851   
1852  ***
1853  * Bound on emissions
1854  * ^^^^^^^^^^^^^^^^^^
1855  *
1856  * .. _emission_constraint:
1857  *
1858  * Equation EMISSION_CONSTRAINT
1859  * """"""""""""""""""""""""""""
1860  * This constraint enforces upper bounds on emissions (by emission type). F
      or all bounds that include multiple periods,
1861  * the parameter :math:`bound\_emission_{n,\widehat{e},\widehat{t},\widehat
      {y}}` is scaled to represent average annual
1862  * emissions over all years included in the year-set :math:`\widehat{y}`.
1863  *
1864  * The formulation includes historical emissions and allows to model constr
      aints ranging over both the model horizon
1865  * and historical periods.
1866  *
1867  *   .. math::
1868  *      \frac{
1869  *          \sum_{y' \in Y(\widehat{y}), e \in E(\widehat{e})}
1870  *              \begin{array}{l}
1871  *                  duration\_period_{y'} \cdot emission\_scaling_{\widehat
      {e},e} \cdot \\
1872  *                  \Big( EMISS_{n,e,\widehat{t},y'} + \sum_{m} historical\
      _emission_{n,e,\widehat{t},y'} \Big)
1873  *              \end{array}
1874  *          }
1875  *        { \sum_{y' \in Y(\widehat{y})} duration\_period_{y'} }
1876  *      \leq bound\_emission_{n,\widehat{e},\widehat{t},\widehat{y}}
1877  *
1878  ***
1879  EMISSION_CONSTRAINT(node,type_emission,type_tec,type_year)$is_bound_emissi
      on(node,type_emission,type_tec,type_year)..
****   $140
**** 140  Unknown symbol
1880      SUM( (year_all2,emission)$( cat_year(type_year,year_all2) AND cat_emis
      sion(type_emission,emission) ),
****     $140
**** 140  Unknown symbol
1881          duration_period(year_all2) * emission_scaling(type_emission,emissi
      on) *
1882              ( EMISS(node,emission,type_tec,year_all2)$( year(year_all2) )
1883                  + historical_emission(node,emission,type_tec,year_all2) )
****                                      $140
**** 140  Unknown symbol
1884        )
1885      / SUM(year_all2$( cat_year(type_year,year_all2) ), duration_period(yea
      r_all2) )
1886  %SLACK_EMISSION% - SLACK_EMISSION(node,type_emission,type_tec,type_year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1887      =L= bound_emission(node,type_emission,type_tec,type_year) ;
1888   
1889  *-------------------------------------------------------------------------
      ---------------------------------------------*
1890  ***
1891  * Land-use model emulator section
1892  * -------------------------------
1893  *
1894  * Bounds on total land use
1895  * ^^^^^^^^^^^^^^^^^^^^^^^^
1896  *
1897  * Equation LAND_CONSTRAINT
1898  * """"""""""""""""""""""""
1899  * This constraint enforces a meaningful result of the land-use model emula
      tor,
1900  * in particular a bound on the total land used in |MESSAGEix|.
1901  * The linear combination of land scenarios must be equal to 1.
1902  *
1903  *  .. math::
1904  *     \sum_{s \in S} LAND_{n,s,y} = 1
1905  *
1906  ***
1907  LAND_CONSTRAINT(node,year)$( SUM(land_scenario$( map_land(node,land_scenar
****                                                          $140
      io,year) ), 1 ) ) ..
**** 140  Unknown symbol
1908      SUM(land_scenario$( map_land(node,land_scenario,year) ), LAND(node,lan
      d_scenario,year) ) =E= 1 ;
1909   
1910  ***
1911  * Dynamic constraints on land use
1912  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1913  * These constraints enforces upper and lower bounds on the change rate per
       land scenario.
1914  *
1915  * Equation DYNAMIC_LAND_SCEN_CONSTRAINT_UP
1916  * """"""""""""""""""""""""""""""""""""""""
1917  *
1918  *  .. math::
1919  *     LAND_{n,s,y}
1920  *         \leq & initial\_land\_scen\_up_{n,s,y}
1921  *             \cdot \frac{ \Big( 1 + growth\_land\_scen\_up_{n,s,y} \Big)^
      {|y|} - 1 }
1922  *                        { growth\_land\_scen\_up_{n,s,y} } \\
1923  *              & + \big( LAND_{n,s,y-1} + historical\_land_{n,s,y-1} \big)
1924  *                  \cdot \Big( 1 + growth\_land\_scen\_up_{n,s,y} \Big)^{|
      y|}
1925  *
1926  ***
1927  DYNAMIC_LAND_SCEN_CONSTRAINT_UP(node,land_scenario,year)$( map_land(node,l
      and_scenario,year)
1928          AND is_dynamic_land_scen_up(node,land_scenario,year) )..
****                                    $140
**** 140  Unknown symbol
1929  * share of land scenario in
1930      LAND(node,land_scenario,year) =L=
1931  * initial 'new' land used for that type (compounded over the duration of t
      he period)
1932          initial_land_scen_up(node,land_scenario,year) * (
****                             $140
**** 140  Unknown symbol
1933              ( ( POWER( 1 + growth_land_scen_up(node,land_scenario,year) , 
****                                               $140
      duration_period(year) ) - 1 )
**** 140  Unknown symbol
1934                  / growth_land_scen_up(node,land_scenario,year) )$( growth_
      land_scen_up(node,land_scenario,year) )
1935                + ( duration_period(year) )$( NOT growth_land_scen_up(node,l
      and_scenario,year) )
1936              )
1937  * expansion of land scenario from previous period
1938          + SUM((year_all2)$( seq_period(year_all2,year) ),
1939                  ( LAND(node,land_scenario,year_all2)$( model_horizon(year_
      all2) )
1940                    + historical_land(node,land_scenario,year_all2) )
****                                    $140
**** 140  Unknown symbol
1941                  * POWER( 1 + growth_land_scen_up(node,land_scenario,year) 
      , duration_period(year) )
1942              )
1943  * optional relaxation for calibration and debugging
1944  %SLACK_LAND_SCEN_UP% + SLACK_LAND_SCEN_UP(node,land_scenario,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1945  ;
1946   
1947  ***
1948  * Equation DYNAMIC_LAND_SCEN_CONSTRAINT_LO
1949  * """"""""""""""""""""""""""""""""""""""""
1950  *
1951  *  .. math::
1952  *     LAND_{n,s,y}
1953  *         \geq & - initial\_land\_scen\_lo_{n,s,y}
1954  *             \cdot \frac{ \Big( 1 + growth\_land\_scen\_lo_{n,s,y} \Big)^
      {|y|} - 1 }
1955  *                        { growth\_land\_scen\_lo_{n,s,y} } \\
1956  *              & + \big( LAND_{n,s,y-1} + historical\_land_{n,s,y-1} \big)
1957  *                  \cdot \Big( 1 + growth\_land\_scen\_lo_{n,s,y} \Big)^{|
      y|}
1958  *
1959  ***
1960  DYNAMIC_LAND_SCEN_CONSTRAINT_LO(node,land_scenario,year)$( map_land(node,l
      and_scenario,year)
1961          AND is_dynamic_land_scen_lo(node,land_scenario,year) )..
****                                    $140
**** 140  Unknown symbol
1962  * share of land scenario in
1963      LAND(node,land_scenario,year) =G=
1964  * initial 'new' land used for that type (compounded over the duration of t
      he period)
1965          - initial_land_scen_lo(node,land_scenario,year) * (
****                               $140
**** 140  Unknown symbol
1966              ( ( POWER( 1 + growth_land_scen_lo(node,land_scenario,year) , 
****                                               $140
      duration_period(year) ) - 1 )
**** 140  Unknown symbol
1967                  / growth_land_scen_lo(node,land_scenario,year) )$( growth_
      land_scen_lo(node,land_scenario,year) )
1968                + ( duration_period(year) )$( NOT growth_land_scen_lo(node,l
      and_scenario,year) )
1969              )
1970  * reduction of land scenario from previous period
1971          + SUM((year_all2)$( seq_period(year_all2,year) ),
1972                  ( LAND(node,land_scenario,year_all2)$( model_horizon(year_
      all2) )
1973                    + historical_land(node,land_scenario,year_all2) )
1974                  * POWER( 1 + growth_land_scen_lo(node,land_scenario,year) 
      , duration_period(year) )
1975              )
1976  * optional relaxation for calibration and debugging
1977  %SLACK_LAND_SCEN_LO% - SLACK_LAND_SCEN_LO(node,land_scenario,year)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
1978  ;
1979   
1980  ***
1981  * These constraints enforces upper and lower bounds on the change rate per
       land type
1982  * determined as a linear combination of land use scenarios.
1983  *
1984  * Equation DYNAMIC_LAND_TYPE_CONSTRAINT_UP
1985  * """"""""""""""""""""""""""""""""""""""""
1986  *
1987  *  .. math::
1988  *     \sum_{s \in S} land\_use_{n,s,y,u} &\cdot LAND_{n,s,y}
1989  *         \leq initial\_land\_up_{n,y,u}
1990  *             \cdot \frac{ \Big( 1 + growth\_land\_up_{n,y,u} \Big)^{|y|} 
      - 1 }
1991  *                        { growth\_land\_up_{n,y,u} } \\
1992  *              & + \Big( \sum_{s \in S} \big( land\_use_{n,s,y-1,u}
1993  *                          + dynamic\_land\_up_{n,s,y-1,u} \big) \\
1994  *                            & \quad \quad \cdot \big( LAND_{n,s,y-1} + hi
      storical\_land_{n,s,y-1} \big) \Big) \\
1995  *                            & \quad \cdot \Big( 1 + growth\_land\_up_{n,y
      ,u} \Big)^{|y|}
1996  *
1997  ***
1998  DYNAMIC_LAND_TYPE_CONSTRAINT_UP(node,year,land_type)$( is_dynamic_land_up(
****                                                                          $1
      node,year,land_type) )..
      40
**** 140  Unknown symbol
1999  * amount of land assigned to specific type in current period
2000      SUM(land_scenario$( map_land(node,land_scenario,year) ),
2001          land_use(node,land_scenario,year,land_type) * LAND(node,land_scena
****                 $140
      rio,year) ) =L=
**** 140  Unknown symbol
2002  * initial 'new' land used for that type (compounded over the duration of t
      he period)
2003          initial_land_up(node,year,land_type) * (
****                        $140
**** 140  Unknown symbol
2004              ( ( POWER( 1 + growth_land_up(node,year,land_type) , duration_
****                                          $140
      period(year) ) - 1 )
**** 140  Unknown symbol
2005                  / growth_land_up(node,year,land_type) )$( growth_land_up(n
      ode,year,land_type) )
2006                + ( duration_period(year) )$( NOT growth_land_up(node,year,l
      and_type) )
2007              )
2008  * expansion of previously used land of this type from previous period and 
      upper bound on land use transformation
2009          + SUM((year_all2)$( seq_period(year_all2,year) ),
2010              SUM(land_scenario$( map_land(node,land_scenario,year) ),
2011                  ( land_use(node,land_scenario,year_all2,land_type)
2012                    + dynamic_land_up(node,land_scenario,year_all2,land_type
****                                    $140
      ) )
**** 140  Unknown symbol
2013                  * ( LAND(node,land_scenario,year_all2)$( model_horizon(yea
      r_all2) )
2014                      + historical_land(node,land_scenario,year_all2) )
2015                  * POWER( 1 + growth_land_up(node,year,land_type) , duratio
      n_period(year) )
2016                )
2017            )
2018  * optional relaxation for calibration and debugging
2019  %SLACK_LAND_TYPE_UP% + SLACK_LAND_TYPE_UP(node,year,land_type)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2020  ;
2021   
2022  ***
2023  * Equation DYNAMIC_LAND_TYPE_CONSTRAINT_LO
2024  * """"""""""""""""""""""""""""""""""""""""
2025  *
2026  *  .. math::
2027  *     \sum_{s \in S} land\_use_{n,s,y,u} &\cdot LAND_{n,s,y}
2028  *         \geq - initial\_land\_lo_{n,y,u}
2029  *             \cdot \frac{ \Big( 1 + growth\_land\_lo_{n,y,u} \Big)^{|y|} 
      - 1 }
2030  *                        { growth\_land\_lo_{n,y,u} } \\
2031  *              & + \Big( \sum_{s \in S} \big( land\_use_{n,s,y-1,u}
2032  *                          + dynamic\_land\_lo_{n,s,y-1,u} \big) \\
2033  *                            & \quad \quad \cdot \big( LAND_{n,s,y-1} + hi
      storical\_land_{n,s,y-1} \big) \Big) \\
2034  *                            & \quad \cdot \Big( 1 + growth\_land\_lo_{n,y
      ,u} \Big)^{|y|}
2035  *
2036  ***
2037  DYNAMIC_LAND_TYPE_CONSTRAINT_LO(node,year,land_type)$( is_dynamic_land_lo(
****                                                                          $1
      node,year,land_type) )..
      40
**** 140  Unknown symbol
2038  * amount of land assigned to specific type in current period
2039      SUM(land_scenario$( map_land(node,land_scenario,year) ),
2040          land_use(node,land_scenario,year,land_type) * LAND(node,land_scena
      rio,year) ) =G=
2041  * initial 'new' land used for that type (compounded over the duration of t
      he period)
2042          - initial_land_lo(node,year,land_type) * (
****                          $140
**** 140  Unknown symbol
2043              ( ( POWER( 1 + growth_land_up(node,year,land_type) , duration_
      period(year) ) - 1 )
2044                  / growth_land_lo(node,year,land_type) )$( growth_land_lo(n
****                                 $140
      ode,year,land_type) )
**** 140  Unknown symbol
2045                + ( duration_period(year) )$( NOT growth_land_lo(node,year,l
      and_type) )
2046              )
2047  * expansion of previously used land of this type from previous period and 
      lower bound on land use transformation
2048          + SUM((year_all2)$( seq_period(year_all2,year) ),
2049              SUM(land_scenario$( map_land(node,land_scenario,year) ),
2050                  ( land_use(node,land_scenario,year_all2,land_type)
2051                    + dynamic_land_lo(node,land_scenario,year_all2,land_type
****                                    $140
      ) )
**** 140  Unknown symbol
2052                  * ( LAND(node,land_scenario,year_all2)$( model_horizon(yea
      r_all2) )
2053                      + historical_land(node,land_scenario,year_all2) )
2054                  * POWER( 1 + growth_land_lo(node,year,land_type) , duratio
      n_period(year) )
2055                )
2056            )
2057  * optional relaxation for calibration and debugging
2058  %SLACK_LAND_TYPE_LO% - SLACK_LAND_TYPE_LO(node,year,land_type)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2059  ;
2060   
2061  *-------------------------------------------------------------------------
      ---------------------------------------------*
2062  ***
2063  * .. _section_of_generic_relations:
2064  *
2065  * Section of generic relations (linear constraints)
2066  * -------------------------------------------------
2067  *
2068  * This feature is intended for development and testing only - all new feat
      ures should be implemented
2069  * as specific new mathematical formulations and associated sets & paramete
      rs!
2070  *
2071  * Auxiliary variable for left-hand side
2072  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2073  *
2074  * Equation RELATION_EQUIVALENCE
2075  * """""""""""""""""""""""""""""
2076  *   .. math::
2077  *      REL_{r,n,y} = \sum_{t} \Bigg(
2078  *          & \ relation\_new\_capacity_{r,n,y,t} \cdot CAP\_NEW_{n,t,y} \\
      [4 pt]
2079  *          & + relation\_total\_capacity_{r,n,y,t} \cdot \sum_{y^V \leq y}
       \ CAP_{n,t,y^V,y} \\
2080  *          & + \sum_{n^L,y',m,h} \ relation\_activity_{r,n,y,n^L,t,y',m} \
      \
2081  *          & \quad \quad \cdot \Big( \sum_{y^V \leq y'} ACT_{n^L,t,y^V,y',
      m,h}
2082  *                              + historical\_activity_{n^L,t,y',m,h} \Big)
       \Bigg)
2083  *
2084  * The parameter :math:`historical\_new\_capacity_{r,n,y}` is not included 
      here, because relations can only be active
2085  * in periods included in the model horizon and there is no "writing" of ca
      pacity relation factors across periods.
2086  ***
2087   
2088  RELATION_EQUIVALENCE(relation,node,year)..
2089      REL(relation,node,year)
2090          =E=
2091      SUM(tec,
2092          ( relation_new_capacity(relation,node,year,tec) * CAP_NEW(node,tec
****                                $140                                        
      ,year)
           $171
**** 140  Unknown symbol
**** 171  Domain violation for set
2093            + relation_total_capacity(relation,node,year,tec)
****                                    $140
**** 140  Unknown symbol
2094              * SUM(vintage$( map_tec_lifetime(node,tec,vintage,year) ), CAP
      (node,tec,vintage,year) )
2095            )$( inv_tec(tec) )
2096          + SUM((location,year_all2,mode,time)$( map_tec_act(location,tec,ye
      ar_all2,mode,time) ),
2097              relation_activity(relation,node,year,location,tec,year_all2,mo
****                              $140
      de)
**** 140  Unknown symbol
2098              * ( SUM(vintage$( map_tec_lifetime(location,tec,vintage,year_a
      ll2) ),
2099                    ACT(location,tec,vintage,year_all2,mode,time) )
2100                    + historical_activity(location,tec,year_all2,mode,time) 
      )
2101            )
2102        ) ;
2103   
2104  ***
2105  * Upper and lower bounds on user-defined relations
2106  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2107  *
2108  * Equation RELATION_CONSTRAINT_UP
2109  * """""""""""""""""""""""""""""""
2110  *   .. math::
2111  *      REL_{r,n,y} \leq relation\_upper_{r,n,y}
2112  ***
2113  RELATION_CONSTRAINT_UP(relation,node,year)$( is_relation_upper(relation,no
****                                                               $140
      de,year) )..
**** 140  Unknown symbol
2114      REL(relation,node,year)
2115  %SLACK_RELATION_BOUND_UP% - SLACK_RELATION_BOUND_UP(relation,node,year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2116      =L= relation_upper(relation,node,year) ;
2117   
2118  ***
2119  * Equation RELATION_CONSTRAINT_LO
2120  * """""""""""""""""""""""""""""""
2121  *   .. math::
2122  *      REL_{r,n,y} \geq relation\_lower_{r,n,y}
2123  ***
2124  RELATION_CONSTRAINT_LO(relation,node,year)$( is_relation_lower(relation,no
****                                                               $140
      de,year) )..
**** 140  Unknown symbol
2125      REL(relation,node,year)
2126  %SLACK_RELATION_BOUND_LO% + SLACK_RELATION_BOUND_LO(relation,node,year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2127      =G= relation_lower(relation,node,year) ;
2128   
2129  *-------------------------------------------------------------------------
      ---------------------------------------------*
2130  ***
2131  * .. _gams-storage:
2132  *
2133  * Storage section
2134  * ---------------
2135  *
2136  * Storage technologies can be used to store a commodity (e.g., water, heat
      , electricity, etc.)
2137  * and shift it over sub-annual time slices. The storage solution presented
       here has three
2138  * distinctive parts: (i) Charger: a technology for charging a commodity to
       the storage container,
2139  * for example, a pump in a pumped hydropower storage (PHS) plant. (ii) Dis
      charger: a technology
2140  * to convert the stored commodity to the output commodity, e.g., a turbine
       in PHS.
2141  * (iii) Storage container: a device for storing a commodity over time, suc
      h as a water reservoir in PHS.
2142  *
2143  * .. figure:: ../../_static/storage.png
2144  *
2145  * Storage equations
2146  * ^^^^^^^^^^^^^^^^^
2147  * The content of storage device depends on three factors: charge or discha
      rge in
2148  * one time step (represented by `Equation STORAGE_CHANGE`_), the state of 
      charge in the previous
2149  * time step, and storage losses between two consecutive time steps.
2150  *
2151  * Equation STORAGE_CHANGE
2152  * """""""""""""""""""""""
2153  * This equation shows the change in the content of the storage container i
      n each
2154  * sub-annual timestep. This change is based on the activity of charger and
       discharger
2155  * technologies connected to that storage container. The notation :math:`S^
      {storage}`
2156  * represents the mapping set `map_tec_storage` denoting charger-discharger
2157  * technologies connected to a specific storage container in a specific nod
      e and
2158  * storage level. Where:
2159  *
2160  * - :math:`t^{C}` is a charging technology and :math:`t^{D}` is the corres
      ponding discharger.
2161  * - :math:`h-1` is the time step prior to :math:`h`.
2162  *
2163  *   .. math::
2164  *      STORAGE\_CHARGE_{n,t,l,c,y,h} =
2165  *          \sum_{\substack{n^L,m,h-1 \\ y^V \leq y, (n,t^C,t,l,y) \sim S^{
      storage}}} output_{n^L,t^C,y^V,y,m,n,c,l,h-1,h}
2166  *             \cdot & ACT_{n^L,t^C,y^V,y,m,h-1} \\
2167  *          - \sum_{\substack{n^L,m,c,h-1 \\ y^V \leq y, (n,t^D,t,l,y) \sim
       S^{storage}}} input_{n^L,t^D,y^V,y,m,n,c,l,h-1,h}
2168  *              \cdot ACT_{n^L,t^D,y^V,y,m,h-1} \quad \forall \ t \in T^{ST
      OR}, & \forall \ l \in L^{STOR}
2169  ***
2170  STORAGE_CHANGE(node,storage_tec,level_storage,commodity,year,time) ..
****                                $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
2171  * change in the content of storage in the examined timestep
2172      STORAGE_CHARGE(node,storage_tec,level_storage,commodity,year,time) =E=
****                                     $171          $171           $171
**** 171  Domain violation for set
2173  * increase in the content of storage due to the activity of charging techn
      ologies
2174          SUM( (location,vintage,mode,tec,time2)$(
2175          map_tec_lifetime(node,tec,vintage,year)
2176          AND map_tec_storage(node,tec,storage_tec,level_storage,commodity) 
****                            $140
      ),
**** 140  Unknown symbol
2177              output(location,tec,vintage,year,mode,node,commodity,level_sto
      rage,time2,time)
2178              * duration_time_rel(time,time2) * ACT(location,tec,vintage,yea
      r,mode,time) )
2179  * decrease in the content of storage due to the activity of discharging te
      chnologies
2180          - SUM( (location,vintage,mode,tec,time2)$(
2181          map_tec_lifetime(node,tec,vintage,year)
2182          AND map_tec_storage(node,tec,storage_tec,level_storage,commodity) 
      ),
2183              input(location,tec,vintage,year,mode,node,commodity,level_stor
      age,time2,time)
2184              * duration_time_rel(time,time2) * ACT(location,tec,vintage,yea
      r,mode,time) );
2185   
2186  ***
2187  * Equation STORAGE_BALANCE
2188  * """"""""""""""""""""""""
2189  *
2190  * This equation ensures the commodity balance of storage technologies,
2191  * where the commodity is shifted between sub-annual timesteps within a mod
      el period.
2192  * If the state of charge of storage is set exogenously in one timestep thr
      ough :math:`storage\_initial_{n,t,l,y,h}` parameter,
2193  * the content from the previous timestep is not carried over to this times
      tep.
2194  *
2195  *   .. math::
2196  *      STORAGE_{n,t,l,y,h} \ = storage\_initial_{n,t,l,y,h} + STORAGE\_CHA
      RGE_{n,t,l,y,h} + \\
2197  *      STORAGE_{n,t,l,y,h-1} \cdot (1 - storage\_self\_discharge_{n,t,l,y,
      h-1}) \quad \forall \ t \in T^{STOR}, & \forall \ l \in L^{STOR}
2198  ***
2199  STORAGE_BALANCE(node,storage_tec,level,commodity,year,time2)$ (
2200      SUM(tec, map_tec_storage(node,tec,storage_tec,level,commodity) )
2201      AND NOT storage_initial(node,storage_tec,level,commodity,year,time2) )
****                            $140
      ..
**** 140  Unknown symbol
2202  * Showing the the state of charge of storage at each timestep
2203      STORAGE(node,storage_tec,level,commodity,year,time2) =E=
****                              $171                 $171  $171
**** 171  Domain violation for set
2204  * change in the content of storage in the examined timestep
2205      + STORAGE_CHARGE(node,storage_tec,level,commodity,year,time2)
****                                       $171                 $171  $171
**** 171  Domain violation for set
2206  * storage content in the previous subannual timestep
2207      + SUM((lvl_temporal,time)$map_time_period(year,lvl_temporal,time,time2
****                        $120,340              $140
      ),
**** 120  Unknown identifier entered as set
**** 140  Unknown symbol
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
2208          STORAGE(node,storage_tec,level,commodity,year,time)
****                                  $171                 $171
**** 171  Domain violation for set
2209  * considering storage self-discharge losses due to keeping the storage med
      ia between two subannual timesteps
2210          * (1 - storage_self_discharge(node,storage_tec,level,commodity,yea
****                                      $140
      r,time) ) ) ;
**** 140  Unknown symbol
2211   
2212  STORAGE_BALANCE_INIT(node,storage_tec,level,commodity,year,time)$ (
2213      SUM(tec, map_tec_storage(node,tec,storage_tec,level,commodity) )
2214      AND storage_initial(node,storage_tec,level,commodity,year,time) )..
2215  * Showing the state of charge of storage at a timestep with an initial sto
      rage content
2216      STORAGE(node,storage_tec,level,commodity,year,time) =E=
****                              $171                 $171
**** 171  Domain violation for set
2217  * initial content of storage and change in the content of storage in the e
      xamined timestep
2218  * (here the content from the previous time step is not carried over)
2219      storage_initial(node,storage_tec,level,commodity,year,time)
2220      + STORAGE_CHARGE(node,storage_tec,level,commodity,year,time) ;
****                                       $171                 $171
**** 171  Domain violation for set
2221   
2222  * Connecting an input commodity to maintain the operation of storage conta
      iner over time (optional)
2223  STORAGE_EQUIVALENCE(node,storage_tec,level,commodity,level_storage,commodi
      ty2,mode,year,time)$
****    $120,340
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
2224      ( map_time_commodity_storage(node,storage_tec,level,commodity,mode,yea
****                                 $140
      r,time) AND
**** 140  Unknown symbol
2225        SUM( tec, map_tec_storage(node,tec,storage_tec,level_storage,commodi
      ty2) ) )..
2226   
2227           STORAGE(node,storage_tec,level_storage,commodity2,year,time) =E=
****                                   $171          $171       $171 $171
**** 171  Domain violation for set
2228          SUM( (location,vintage,time2)$(map_tec_lifetime(node,storage_tec,v
      intage,year)$(
2229                input(location,storage_tec,vintage,year,mode,node,commodity,
      level,time2,time) ) ),
2230                duration_time_rel(time,time2) * ACT(location,storage_tec,vin
      tage,year,mode,time) );
2231   
2232  ***
2233  * Equation BLUES_LAND_BALANCE
2234  * """""""""""""""""""""""""""""""""""
2235  * This constraint provides land capacity balance over years.
2236  *
2237  *   .. math::
2238  *
2239  *
2240  *
2241  * This constraint is only active if : is defined.
2242  ***
2243  BLUES_LAND_BALANCE(node,tec,year,BLUES_type_land_tec) $ ( map_BLUES_land_r
      el(node,tec, BLUES_type_land_tec)
****   $140
**** 140  Unknown symbol
2244           AND NOT historical(year)
2245           AND NOT first_period(year)
2246                   ) ..
2247  * capacity of land primary tec in y+1
2248          (SUM(vintage $ (year_order(vintage) <= year_order(year)
2249                           AND map_tec_lifetime(node,tec,vintage,year)), CAP
      (node,tec,vintage,year)   ) )
2250          =E=
2251          ( SUM((vintage, year_all2, BLUES_sec_land_tec) $( seq_period(year_
****                                                      $120,340
      all2,year)
**** 120  Unknown identifier entered as set
**** 340  A label/element with the same name exist. You may have forgotten
****         to quote a label/element reference. For example,
****         set i / a,b,c /; parameter x(i); x('a') = 10;
2252           AND BLUES_cat_land_tec(BLUES_type_land_tec, BLUES_sec_land_tec) A
****                                $140
      ND year_order(vintage) < year_order(year)),
**** 140  Unknown symbol
2253                  remaining_capacity(node,BLUES_sec_land_tec,vintage,year_al
      l2) * CAP(node,BLUES_sec_land_tec,vintage,year_all2) ))
2254  %SLACK_CAP_LAND% + SLACK_CAP_LAND(node,tec,year,BLUES_type_land_tec)
****  $409
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2255                  ;
2256  ***
2257  * Equation LAND CAPACITY MAINTENANCE HIST
2258  * """""""""""""""""""""""""""""""""""
2259  * This constraint provides land capacity balance in the first year
2260  *
2261  *   .. math::
2262  *
2263  *
2264  *
2265  * This constraint is only active if : is defined.
2266  ***
2267  *BLUES_LAND_HIST_BAL(node,tec,vintage,first_period)$( map_tec_lifetime(nod
      e,tec,vintage,first_period)
2268  *        AND historical(vintage) AND BLUES_land_tec(tec) AND seq_period(vi
      ntage,first_period))..
2269  *    CAP(node,tec,vintage,first_period) + CAP(node,tec,first_period,first_
      period)
2270  *    =E=
2271  *         remaining_capacity(node,tec,vintage,first_period) *
2272  *        duration_period(vintage) * historical_new_capacity(node,tec,vinta
      ge) ;
2273   
2274   
2275   
2276  *-------------------------------------------------------------------------
      ---------------------------------------------*
2277  ***
2278  * .. _section_of_generic_relations:
2279  *
2280  * Section of generic relations (linear constraints)
2281  * -------------------------------------------------
2282  *
2283  * This feature is intended for development and testing only - all new feat
      ures should be implemented
2284  * as specific new mathematical formulations and associated sets & paramete
      rs!
2285  *
2286  * Auxiliary variable for left-hand side
2287  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2288  *
2289  * Equation RELATION_EQUIVALENCE
2290  * """""""""""""""""""""""""""""
2291  *   .. math::
2292  *      REL_{r,n,y} = \sum_{t} \Bigg(
2293  *          & \ relation\_new\_capacity_{r,n,y,t} \cdot CAP\_NEW_{n,t,y} \\
      [4 pt]
2294  *          & + relation\_total\_capacity_{r,n,y,t} \cdot \sum_{y^V \leq y}
       \ CAP_{n,t,y^V,y} \\
2295  *          & + \sum_{n^L,y',m,h} \ relation\_activity_{r,n,y,n^L,t,y',m} \
      \
2296  *          & \quad \quad \cdot \Big( \sum_{y^V \leq y'} ACT_{n^L,t,y^V,y',
      m,h}
2297  *                              + historical\_activity_{n^L,t,y',m,h} \Big)
       \Bigg)
2298  *
2299  * The parameter :math:`historical\_new\_capacity_{r,n,y}` is not included 
      here, because relations can only be active
2300  * in periods included in the model horizon and there is no "writing" of ca
      pacity relation factors across periods.
2301  ***
2302   
2303  RELATION_EQUIVALENCE2(relation2,node,year)..
2304      REL2(relation2,node,year)
2305          =E=
2306      SUM(tec,
2307          ( relation_new_capacity2(relation2,node,year,tec) * CAP_NEW(node,t
****                                 $140                                       
      ec,year)
             $171
**** 140  Unknown symbol
**** 171  Domain violation for set
2308            + relation_total_capacity2(relation2,node,year,tec)
****                                     $140
**** 140  Unknown symbol
2309              * SUM(vintage$( map_tec_lifetime(node,tec,vintage,year) ), CAP
      (node,tec,vintage,year) )
2310            )$( inv_tec(tec) )
2311          + SUM((location,year_all2,mode,time)$( map_tec_act(location,tec,ye
      ar_all2,mode,time) ),
2312              relation_activity2(relation2,node,year,location,tec,year_all2,
****                               $140
      mode)
**** 140  Unknown symbol
2313              *  main_rel_val(relation2, node,tec,year_all2,mode,time)
****                            $140
**** 140  Unknown symbol
2314              * ( SUM(vintage$( map_tec_lifetime(location,tec,vintage,year_a
      ll2) ),
2315                    duration_time(time) * ACT(location,tec,vintage,year_all2
      ,mode,time)
2316                    )
2317                    + historical_activity(location,tec,year_all2,mode,time) 
      )
2318            )
2319        ) ;
2320   
2321  ***
2322  * Upper and lower bounds on user-defined relations
2323  * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2324  *
2325  * Equation RELATION_CONSTRAINT_UP
2326  * """""""""""""""""""""""""""""""
2327  *   .. math::
2328  *      REL_{r,n,y} \leq relation\_upper_{r,n,y}
2329  ***
2330  RELATION_CONSTRAINT_UP2(relation2,node,year)$( is_relation_upper2(relation
****                                                                  $140
      2,node,year) )..
**** 140  Unknown symbol
2331      REL2(relation2,node,year)
2332  %SLACK_RELATION_BOUND_UP2% - SLACK_RELATION_BOUND_UP2(relation2,node,year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2333      =L= relation_upper2(relation2,node,year) ;
2334   
2335  ***
2336  * Equation RELATION_CONSTRAINT_LO
2337  * """""""""""""""""""""""""""""""
2338  *   .. math::
2339  *      REL_{r,n,y} \geq relation\_lower_{r,n,y}
2340  ***
2341  RELATION_CONSTRAINT_LO2(relation2,node,year)$( is_relation_lower2(relation
****                                                                  $140
      2,node,year) )..
**** 140  Unknown symbol
2342      REL2(relation2,node,year)
2343  %SLACK_RELATION_BOUND_LO2% + SLACK_RELATION_BOUND_LO2(relation2,node,year)
****  $37,409
****  37  '=l=' or '=e=' or '=g=' operator expected
**** 409  Unrecognizable item - skip to find a new statement
****        looking for a ';' or a key word to get started again
2344      =G= relation_lower2(relation2,node,year) ;
2345  *-------------------------------------------------------------------------
      ---------------------------------------------*
2346  * model statements                                                        
                                                   *
2347  *-------------------------------------------------------------------------
      ---------------------------------------------*
2348   
2349  Model MESSAGE_LP / all / ;
2350   
2351  MESSAGE_LP.holdfixed = 1 ;
2352  MESSAGE_LP.optfile = 1 ;
2353  MESSAGE_LP.optcr = 0 ;

**** 374 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.640 SECONDS      3 MB  24.7.4 r58773 WEX-WEI


USER: Energy Planning Program                        W150420:1241AO-WIN
      COPPE-UFRJ                                                DC11728
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      D:\Fabio\Diuana_Pdrive_IIASA\Models\NEST-BLUES\model\MESSAGE/model_co
           re.gms
Output     D:\Fabio\Diuana_Pdrive_IIASA\Models\NEST-BLUES\model\MESSAGE/model_co
           re.lst

**** USER ERROR(S) ENCOUNTERED
